package com.mmtap.trader.bridjapi;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.TimeT;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:1215</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("MT4ManagerAPI") 
public class DailyReport extends StructObject {
	static {
		BridJ.register();
	}
	/** login */
	@Field(0) 
	public int login() {
		return this.io.getIntField(this, 0);
	}
	/** login */
	@Field(0) 
	public DailyReport login(int login) {
		this.io.setIntField(this, 0, login);
		return this;
	}
	/** time */
	@Field(1) 
	public TimeT ctm() {
		return this.io.getTimeTField(this, 1);
	}
	/** time */
	@Field(1) 
	public DailyReport ctm(TimeT ctm) {
		this.io.setTimeTField(this, 1, ctm);
		return this;
	}
	/**
	 * group<br>
	 * C type : char[16]
	 */
	@Array({16}) 
	@Field(2) 
	public Pointer<Byte > group() {
		return this.io.getPointerField(this, 2);
	}
	/**
	 * bank<br>
	 * C type : char[64]
	 */
	@Array({64}) 
	@Field(3) 
	public Pointer<Byte > bank() {
		return this.io.getPointerField(this, 3);
	}
	/** previous balance */
	@Field(4) 
	public double balance_prev() {
		return this.io.getDoubleField(this, 4);
	}
	/** previous balance */
	@Field(4) 
	public DailyReport balance_prev(double balance_prev) {
		this.io.setDoubleField(this, 4, balance_prev);
		return this;
	}
	/** balance */
	@Field(5) 
	public double balance() {
		return this.io.getDoubleField(this, 5);
	}
	/** balance */
	@Field(5) 
	public DailyReport balance(double balance) {
		this.io.setDoubleField(this, 5, balance);
		return this;
	}
	/** deposit */
	@Field(6) 
	public double deposit() {
		return this.io.getDoubleField(this, 6);
	}
	/** deposit */
	@Field(6) 
	public DailyReport deposit(double deposit) {
		this.io.setDoubleField(this, 6, deposit);
		return this;
	}
	/** credit */
	@Field(7) 
	public double credit() {
		return this.io.getDoubleField(this, 7);
	}
	/** credit */
	@Field(7) 
	public DailyReport credit(double credit) {
		this.io.setDoubleField(this, 7, credit);
		return this;
	}
	/** closed profit/loss */
	@Field(8) 
	public double profit_closed() {
		return this.io.getDoubleField(this, 8);
	}
	/** closed profit/loss */
	@Field(8) 
	public DailyReport profit_closed(double profit_closed) {
		this.io.setDoubleField(this, 8, profit_closed);
		return this;
	}
	/** floating profit/loss */
	@Field(9) 
	public double profit() {
		return this.io.getDoubleField(this, 9);
	}
	/** floating profit/loss */
	@Field(9) 
	public DailyReport profit(double profit) {
		this.io.setDoubleField(this, 9, profit);
		return this;
	}
	/** equity */
	@Field(10) 
	public double equity() {
		return this.io.getDoubleField(this, 10);
	}
	/** equity */
	@Field(10) 
	public DailyReport equity(double equity) {
		this.io.setDoubleField(this, 10, equity);
		return this;
	}
	/** used margin */
	@Field(11) 
	public double margin() {
		return this.io.getDoubleField(this, 11);
	}
	/** used margin */
	@Field(11) 
	public DailyReport margin(double margin) {
		this.io.setDoubleField(this, 11, margin);
		return this;
	}
	/** free margin */
	@Field(12) 
	public double margin_free() {
		return this.io.getDoubleField(this, 12);
	}
	/** free margin */
	@Field(12) 
	public DailyReport margin_free(double margin_free) {
		this.io.setDoubleField(this, 12, margin_free);
		return this;
	}
	/** (internal) */
	@Field(13) 
	public int next() {
		return this.io.getIntField(this, 13);
	}
	/** (internal) */
	@Field(13) 
	public DailyReport next(int next) {
		this.io.setIntField(this, 13, next);
		return this;
	}
	/**
	 * reserved<br>
	 * C type : int[3]
	 */
	@Array({3}) 
	@Field(14) 
	public Pointer<Integer > reserved() {
		return this.io.getPointerField(this, 14);
	}
	public DailyReport() {
		super();
	}
	public DailyReport(Pointer pointer) {
		super(pointer);
	}
}
