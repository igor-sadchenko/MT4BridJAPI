package com.mmtap.trader.bridjapi;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.TimeT;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:55</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("MT4ManagerAPI") 
public class ConCommon extends StructObject {
	static {
		BridJ.register();
	}
	/**
	 * servers owner (include version & build)<br>
	 * C type : char[128]
	 */
	@Array({128}) 
	@Field(0) 
	public Pointer<Byte > owner() {
		return this.io.getPointerField(this, 0);
	}
	/**
	 * server name<br>
	 * C type : char[32]
	 */
	@Array({32}) 
	@Field(1) 
	public Pointer<Byte > name() {
		return this.io.getPointerField(this, 1);
	}
	/** IP address assigned to the server */
	@org.bridj.ann.CLong 
	@Field(2) 
	public long address() {
		return this.io.getCLongField(this, 2);
	}
	/** IP address assigned to the server */
	@org.bridj.ann.CLong 
	@Field(2) 
	public ConCommon address(long address) {
		this.io.setCLongField(this, 2, address);
		return this;
	}
	/** port */
	@Field(3) 
	public int port() {
		return this.io.getIntField(this, 3);
	}
	/** port */
	@Field(3) 
	public ConCommon port(int port) {
		this.io.setIntField(this, 3, port);
		return this;
	}
	/** sockets timeout */
	@Field(4) 
	public int timeout() {
		return this.io.getIntField(this, 4);
	}
	/** sockets timeout */
	@Field(4) 
	public ConCommon timeout(int timeout) {
		this.io.setIntField(this, 4, timeout);
		return this;
	}
	/** demo-accounts type (DEMO_DISABLED, DEMO_PROLONG, DEMO_FIXED) */
	@Field(5) 
	public int typeofdemo() {
		return this.io.getIntField(this, 5);
	}
	/** demo-accounts type (DEMO_DISABLED, DEMO_PROLONG, DEMO_FIXED) */
	@Field(5) 
	public ConCommon typeofdemo(int typeofdemo) {
		this.io.setIntField(this, 5, typeofdemo);
		return this;
	}
	/** demo-account living time */
	@Field(6) 
	public int timeofdemo() {
		return this.io.getIntField(this, 6);
	}
	/** demo-account living time */
	@Field(6) 
	public ConCommon timeofdemo(int timeofdemo) {
		this.io.setIntField(this, 6, timeofdemo);
		return this;
	}
	/** allow daylight correction */
	@Field(7) 
	public int daylightcorrection() {
		return this.io.getIntField(this, 7);
	}
	/** allow daylight correction */
	@Field(7) 
	public ConCommon daylightcorrection(int daylightcorrection) {
		this.io.setIntField(this, 7, daylightcorrection);
		return this;
	}
	/**
	 * reserved<br>
	 * C type : char[60]
	 */
	@Array({60}) 
	@Field(8) 
	public Pointer<Byte > internal() {
		return this.io.getPointerField(this, 8);
	}
	/** time zone with day light mode */
	@Field(9) 
	public int timezone_real() {
		return this.io.getIntField(this, 9);
	}
	/** time zone with day light mode */
	@Field(9) 
	public ConCommon timezone_real(int timezone_real) {
		this.io.setIntField(this, 9, timezone_real);
		return this;
	}
	/** time zone 0-GMT;-1=GMT-1;1=GMT+1; */
	@Field(10) 
	public int timezone() {
		return this.io.getIntField(this, 10);
	}
	/** time zone 0-GMT;-1=GMT-1;1=GMT+1; */
	@Field(10) 
	public ConCommon timezone(int timezone) {
		this.io.setIntField(this, 10, timezone);
		return this;
	}
	/**
	 * time synchronization server address<br>
	 * C type : char[64]
	 */
	@Array({64}) 
	@Field(11) 
	public Pointer<Byte > timesync() {
		return this.io.getPointerField(this, 11);
	}
	/** minimal authorized client version */
	@Field(12) 
	public int minclient() {
		return this.io.getIntField(this, 12);
	}
	/** minimal authorized client version */
	@Field(12) 
	public ConCommon minclient(int minclient) {
		this.io.setIntField(this, 12, minclient);
		return this;
	}
	/** minimal authorized client version */
	@Field(13) 
	public int minapi() {
		return this.io.getIntField(this, 13);
	}
	/** minimal authorized client version */
	@Field(13) 
	public ConCommon minapi(int minapi) {
		this.io.setIntField(this, 13, minapi);
		return this;
	}
	/** data feed switch timeout */
	@Field(14) 
	public int feeder_timeout() {
		return this.io.getIntField(this, 14);
	}
	/** data feed switch timeout */
	@Field(14) 
	public ConCommon feeder_timeout(int feeder_timeout) {
		this.io.setIntField(this, 14, feeder_timeout);
		return this;
	}
	/** internal mail keep period */
	@Field(15) 
	public int keepemails() {
		return this.io.getIntField(this, 15);
	}
	/** internal mail keep period */
	@Field(15) 
	public ConCommon keepemails(int keepemails) {
		this.io.setIntField(this, 15, keepemails);
		return this;
	}
	/** end of day time-hour & minute */
	@Field(16) 
	public int endhour() {
		return this.io.getIntField(this, 16);
	}
	/** end of day time-hour & minute */
	@Field(16) 
	public ConCommon endhour(int endhour) {
		this.io.setIntField(this, 16, endhour);
		return this;
	}
	/** end of day time-hour & minute */
	@Field(17) 
	public int endminute() {
		return this.io.getIntField(this, 17);
	}
	/** end of day time-hour & minute */
	@Field(17) 
	public ConCommon endminute(int endminute) {
		this.io.setIntField(this, 17, endminute);
		return this;
	}
	/** optimization start time (minutes) */
	@Field(18) 
	public int optimization_time() {
		return this.io.getIntField(this, 18);
	}
	/** optimization start time (minutes) */
	@Field(18) 
	public ConCommon optimization_time(int optimization_time) {
		this.io.setIntField(this, 18, optimization_time);
		return this;
	}
	/** optimization last time */
	@Field(19) 
	public int optimization_lasttime() {
		return this.io.getIntField(this, 19);
	}
	/** optimization last time */
	@Field(19) 
	public ConCommon optimization_lasttime(int optimization_lasttime) {
		this.io.setIntField(this, 19, optimization_lasttime);
		return this;
	}
	/** internal variable */
	@Field(20) 
	public int optimization_counter() {
		return this.io.getIntField(this, 20);
	}
	/** internal variable */
	@Field(20) 
	public ConCommon optimization_counter(int optimization_counter) {
		this.io.setIntField(this, 20, optimization_counter);
		return this;
	}
	/**
	 * reserved for future use<br>
	 * C type : int[8]
	 */
	@Array({8}) 
	@Field(21) 
	public Pointer<Integer > optimization_unused() {
		return this.io.getPointerField(this, 21);
	}
	/** enable antiflood control */
	@Field(22) 
	public int antiflood() {
		return this.io.getIntField(this, 22);
	}
	/** enable antiflood control */
	@Field(22) 
	public ConCommon antiflood(int antiflood) {
		this.io.setIntField(this, 22, antiflood);
		return this;
	}
	/** max. antiflood connections */
	@Field(23) 
	public int floodcontrol() {
		return this.io.getIntField(this, 23);
	}
	/** max. antiflood connections */
	@Field(23) 
	public ConCommon floodcontrol(int floodcontrol) {
		this.io.setIntField(this, 23, floodcontrol);
		return this;
	}
	/** LiveUpdate mode (LIVE_UPDATE_NO,LIVE_UPDATE_ALL,LIVE_UPDATE_NO_SERVER) */
	@Field(24) 
	public int liveupdate_mode() {
		return this.io.getIntField(this, 24);
	}
	/** LiveUpdate mode (LIVE_UPDATE_NO,LIVE_UPDATE_ALL,LIVE_UPDATE_NO_SERVER) */
	@Field(24) 
	public ConCommon liveupdate_mode(int liveupdate_mode) {
		this.io.setIntField(this, 24, liveupdate_mode);
		return this;
	}
	/** last order's ticket     (read only) */
	@Field(25) 
	public int lastorder() {
		return this.io.getIntField(this, 25);
	}
	/** last order's ticket     (read only) */
	@Field(25) 
	public ConCommon lastorder(int lastorder) {
		this.io.setIntField(this, 25, lastorder);
		return this;
	}
	/** last account's number   (read only) */
	@Field(26) 
	public int lastlogin() {
		return this.io.getIntField(this, 26);
	}
	/** last account's number   (read only) */
	@Field(26) 
	public ConCommon lastlogin(int lastlogin) {
		this.io.setIntField(this, 26, lastlogin);
		return this;
	}
	/** lost commission's login (read only) */
	@Field(27) 
	public int lostlogin() {
		return this.io.getIntField(this, 27);
	}
	/** lost commission's login (read only) */
	@Field(27) 
	public ConCommon lostlogin(int lostlogin) {
		this.io.setIntField(this, 27, lostlogin);
		return this;
	}
	/** rollover mode (ROLLOVER_NORMAL,ROLLOVER_REOPEN_BY_CLOSE_PRICE,ROLLOVER_REOPEN_BY_BID) */
	@Field(28) 
	public int rollovers_mode() {
		return this.io.getIntField(this, 28);
	}
	/** rollover mode (ROLLOVER_NORMAL,ROLLOVER_REOPEN_BY_CLOSE_PRICE,ROLLOVER_REOPEN_BY_BID) */
	@Field(28) 
	public ConCommon rollovers_mode(int rollovers_mode) {
		this.io.setIntField(this, 28, rollovers_mode);
		return this;
	}
	/**
	 * path to databases<br>
	 * C type : char[256]
	 */
	@Array({256}) 
	@Field(29) 
	public Pointer<Byte > path_database() {
		return this.io.getPointerField(this, 29);
	}
	/**
	 * path to history bases<br>
	 * C type : char[256]
	 */
	@Array({256}) 
	@Field(30) 
	public Pointer<Byte > path_history() {
		return this.io.getPointerField(this, 30);
	}
	/**
	 * path to log<br>
	 * C type : char[256]
	 */
	@Array({256}) 
	@Field(31) 
	public Pointer<Byte > path_log() {
		return this.io.getPointerField(this, 31);
	}
	/** day of last overnight */
	@Field(32) 
	public TimeT overnight_last_day() {
		return this.io.getTimeTField(this, 32);
	}
	/** day of last overnight */
	@Field(32) 
	public ConCommon overnight_last_day(TimeT overnight_last_day) {
		this.io.setTimeTField(this, 32, overnight_last_day);
		return this;
	}
	/** time of last overnight */
	@Field(33) 
	public TimeT overnight_last_time() {
		return this.io.getTimeTField(this, 33);
	}
	/** time of last overnight */
	@Field(33) 
	public ConCommon overnight_last_time(TimeT overnight_last_time) {
		this.io.setTimeTField(this, 33, overnight_last_time);
		return this;
	}
	/** time of next to last overnight */
	@Field(34) 
	public TimeT overnight_prev_time() {
		return this.io.getTimeTField(this, 34);
	}
	/** time of next to last overnight */
	@Field(34) 
	public ConCommon overnight_prev_time(TimeT overnight_prev_time) {
		this.io.setTimeTField(this, 34, overnight_prev_time);
		return this;
	}
	/** month of last report */
	@Field(35) 
	public TimeT overmonth_last_month() {
		return this.io.getTimeTField(this, 35);
	}
	/** month of last report */
	@Field(35) 
	public ConCommon overmonth_last_month(TimeT overmonth_last_month) {
		this.io.setTimeTField(this, 35, overmonth_last_month);
		return this;
	}
	/**
	 * network adapters list (read-only)<br>
	 * C type : char[256]
	 */
	@Array({256}) 
	@Field(36) 
	public Pointer<Byte > adapters() {
		return this.io.getPointerField(this, 36);
	}
	/**
	 * array of avaible IP addresses<br>
	 * C type : ULONG[8]
	 */
	@Array({8}) 
	@Field(37) 
	public Pointer<org.bridj.CLong > bind_adresses() {
		return this.io.getPointerField(this, 37);
	}
	/** server version */
	@Field(38) 
	public short server_version() {
		return this.io.getShortField(this, 38);
	}
	/** server version */
	@Field(38) 
	public ConCommon server_version(short server_version) {
		this.io.setShortField(this, 38, server_version);
		return this;
	}
	/** server build */
	@Field(39) 
	public short server_build() {
		return this.io.getShortField(this, 39);
	}
	/** server build */
	@Field(39) 
	public ConCommon server_build(short server_build) {
		this.io.setShortField(this, 39, server_build);
		return this;
	}
	/**
	 * web services access list (comma separated IP addresses)<br>
	 * C type : ULONG[8]
	 */
	@Array({8}) 
	@Field(40) 
	public Pointer<org.bridj.CLong > web_adresses() {
		return this.io.getPointerField(this, 40);
	}
	/** statement generation time (STATEMENT_END_DAY,STATEMENT_START_DAY) */
	@Field(41) 
	public int statement_mode() {
		return this.io.getIntField(this, 41);
	}
	/** statement generation time (STATEMENT_END_DAY,STATEMENT_START_DAY) */
	@Field(41) 
	public ConCommon statement_mode(int statement_mode) {
		this.io.setIntField(this, 41, statement_mode);
		return this;
	}
	/** monthly statement generation day (MONTHLY_STATEMENT_END_MONTH,MONTHLY_STATEMENT_START_MONTH) */
	@Field(42) 
	public int monthly_state_mode() {
		return this.io.getIntField(this, 42);
	}
	/** monthly statement generation day (MONTHLY_STATEMENT_END_MONTH,MONTHLY_STATEMENT_START_MONTH) */
	@Field(42) 
	public ConCommon monthly_state_mode(int monthly_state_mode) {
		this.io.setIntField(this, 42, monthly_state_mode);
		return this;
	}
	/** ticks keep period */
	@Field(43) 
	public int keepticks() {
		return this.io.getIntField(this, 43);
	}
	/** ticks keep period */
	@Field(43) 
	public ConCommon keepticks(int keepticks) {
		this.io.setIntField(this, 43, keepticks);
		return this;
	}
	/** generate statements at weekends */
	@Field(44) 
	public int statement_weekend() {
		return this.io.getIntField(this, 44);
	}
	/** generate statements at weekends */
	@Field(44) 
	public ConCommon statement_weekend(int statement_weekend) {
		this.io.setIntField(this, 44, statement_weekend);
		return this;
	}
	/** last activation datetime */
	@Field(45) 
	public TimeT last_activate() {
		return this.io.getTimeTField(this, 45);
	}
	/** last activation datetime */
	@Field(45) 
	public ConCommon last_activate(TimeT last_activate) {
		this.io.setTimeTField(this, 45, last_activate);
		return this;
	}
	/** last stop datetime */
	@Field(46) 
	public TimeT stop_last() {
		return this.io.getTimeTField(this, 46);
	}
	/** last stop datetime */
	@Field(46) 
	public ConCommon stop_last(TimeT stop_last) {
		this.io.setTimeTField(this, 46, stop_last);
		return this;
	}
	/** last stop delay */
	@Field(47) 
	public int stop_delay() {
		return this.io.getIntField(this, 47);
	}
	/** last stop delay */
	@Field(47) 
	public ConCommon stop_delay(int stop_delay) {
		this.io.setIntField(this, 47, stop_delay);
		return this;
	}
	/** last stop reason */
	@Field(48) 
	public int stop_reason() {
		return this.io.getIntField(this, 48);
	}
	/** last stop reason */
	@Field(48) 
	public ConCommon stop_reason(int stop_reason) {
		this.io.setIntField(this, 48, stop_reason);
		return this;
	}
	/**
	 * account allocation URL<br>
	 * C type : char[128]
	 */
	@Array({128}) 
	@Field(49) 
	public Pointer<Byte > account_url() {
		return this.io.getPointerField(this, 49);
	}
	/** C type : int[16] */
	@Array({16}) 
	@Field(50) 
	public Pointer<Integer > reserved() {
		return this.io.getPointerField(this, 50);
	}
	public ConCommon() {
		super();
	}
	public ConCommon(Pointer pointer) {
		super(pointer);
	}
}
