package com.mmtap.trader.bridjapi;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.TimeT;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * ---<br>
 * <i>native declaration : MT4ManagerAPI.h:927</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("MT4ManagerAPI") 
public abstract class UserRecord extends StructObject {
	static {
		BridJ.register();
	}
	/** login */
	@Field(0) 
	public int login() {
		return this.io.getIntField(this, 0);
	}
	/** login */
	@Field(0) 
	public UserRecord login(int login) {
		this.io.setIntField(this, 0, login);
		return this;
	}
	/**
	 * group<br>
	 * C type : char[16]
	 */
	@Array({16}) 
	@Field(1) 
	public Pointer<Byte > group() {
		return this.io.getPointerField(this, 1);
	}
	/**
	 * password<br>
	 * C type : char[16]
	 */
	@Array({16}) 
	@Field(2) 
	public Pointer<Byte > password() {
		return this.io.getPointerField(this, 2);
	}
	/** enable */
	@Field(3) 
	public int enable() {
		return this.io.getIntField(this, 3);
	}
	/** enable */
	@Field(3) 
	public UserRecord enable(int enable) {
		this.io.setIntField(this, 3, enable);
		return this;
	}
	/** allow to change password */
	@Field(4) 
	public int enable_change_password() {
		return this.io.getIntField(this, 4);
	}
	/** allow to change password */
	@Field(4) 
	public UserRecord enable_change_password(int enable_change_password) {
		this.io.setIntField(this, 4, enable_change_password);
		return this;
	}
	/** allow to open/positions (TRUE-may not trade) */
	@Field(5) 
	public int enable_read_only() {
		return this.io.getIntField(this, 5);
	}
	/** allow to open/positions (TRUE-may not trade) */
	@Field(5) 
	public UserRecord enable_read_only(int enable_read_only) {
		this.io.setIntField(this, 5, enable_read_only);
		return this;
	}
	/** allow to use one-time password */
	@Field(6) 
	public int enable_otp() {
		return this.io.getIntField(this, 6);
	}
	/** allow to use one-time password */
	@Field(6) 
	public UserRecord enable_otp(int enable_otp) {
		this.io.setIntField(this, 6, enable_otp);
		return this;
	}
	/**
	 * for future use<br>
	 * C type : int[2]
	 */
	@Array({2}) 
	@Field(7) 
	public Pointer<Integer > enable_reserved() {
		return this.io.getPointerField(this, 7);
	}
	/**
	 * read-only mode password<br>
	 * C type : char[16]
	 */
	@Array({16}) 
	@Field(8) 
	public Pointer<Byte > password_investor() {
		return this.io.getPointerField(this, 8);
	}
	/**
	 * phone password<br>
	 * C type : char[32]
	 */
	@Array({32}) 
	@Field(9) 
	public Pointer<Byte > password_phone() {
		return this.io.getPointerField(this, 9);
	}
	/**
	 * name<br>
	 * C type : char[128]
	 */
	@Array({128}) 
	@Field(10) 
	public Pointer<Byte > name() {
		return this.io.getPointerField(this, 10);
	}
	/**
	 * country<br>
	 * C type : char[32]
	 */
	@Array({32}) 
	@Field(11) 
	public Pointer<Byte > country() {
		return this.io.getPointerField(this, 11);
	}
	/**
	 * city<br>
	 * C type : char[32]
	 */
	@Array({32}) 
	@Field(12) 
	public Pointer<Byte > city() {
		return this.io.getPointerField(this, 12);
	}
	/**
	 * state<br>
	 * C type : char[32]
	 */
	@Array({32}) 
	@Field(13) 
	public Pointer<Byte > state() {
		return this.io.getPointerField(this, 13);
	}
	/**
	 * zipcode<br>
	 * C type : char[16]
	 */
	@Array({16}) 
	@Field(14) 
	public Pointer<Byte > zipcode() {
		return this.io.getPointerField(this, 14);
	}
	/**
	 * address<br>
	 * C type : char[96]
	 */
	@Array({96}) 
	@Field(15) 
	public Pointer<Byte > address() {
		return this.io.getPointerField(this, 15);
	}
	/**
	 * lead source<br>
	 * C type : char[32]
	 */
	@Array({32}) 
	@Field(16) 
	public Pointer<Byte > lead_source() {
		return this.io.getPointerField(this, 16);
	}
	/**
	 * phone<br>
	 * C type : char[32]
	 */
	@Array({32}) 
	@Field(17) 
	public Pointer<Byte > phone() {
		return this.io.getPointerField(this, 17);
	}
	/**
	 * email<br>
	 * C type : char[48]
	 */
	@Array({48}) 
	@Field(18) 
	public Pointer<Byte > email() {
		return this.io.getPointerField(this, 18);
	}
	/**
	 * comment<br>
	 * C type : char[64]
	 */
	@Array({64}) 
	@Field(19) 
	public Pointer<Byte > comment() {
		return this.io.getPointerField(this, 19);
	}
	/**
	 * SSN (IRD)<br>
	 * C type : char[32]
	 */
	@Array({32}) 
	@Field(20) 
	public Pointer<Byte > id() {
		return this.io.getPointerField(this, 20);
	}
	/**
	 * status<br>
	 * C type : char[16]
	 */
	@Array({16}) 
	@Field(21) 
	public Pointer<Byte > status() {
		return this.io.getPointerField(this, 21);
	}
	/** registration date */
	@Field(22) 
	public TimeT regdate() {
		return this.io.getTimeTField(this, 22);
	}
	/** registration date */
	@Field(22) 
	public UserRecord regdate(TimeT regdate) {
		this.io.setTimeTField(this, 22, regdate);
		return this;
	}
	/** last coonection time */
	@Field(23) 
	public TimeT lastdate() {
		return this.io.getTimeTField(this, 23);
	}
	/** last coonection time */
	@Field(23) 
	public UserRecord lastdate(TimeT lastdate) {
		this.io.setTimeTField(this, 23, lastdate);
		return this;
	}
	/** leverage */
	@Field(24) 
	public int leverage() {
		return this.io.getIntField(this, 24);
	}
	/** leverage */
	@Field(24) 
	public UserRecord leverage(int leverage) {
		this.io.setIntField(this, 24, leverage);
		return this;
	}
	/** agent account */
	@Field(25) 
	public int agent_account() {
		return this.io.getIntField(this, 25);
	}
	/** agent account */
	@Field(25) 
	public UserRecord agent_account(int agent_account) {
		this.io.setIntField(this, 25, agent_account);
		return this;
	}
	/** timestamp */
	@Field(26) 
	public TimeT timestamp() {
		return this.io.getTimeTField(this, 26);
	}
	/** timestamp */
	@Field(26) 
	public UserRecord timestamp(TimeT timestamp) {
		this.io.setTimeTField(this, 26, timestamp);
		return this;
	}
	/** last visit ip */
	@Field(27) 
	public int last_ip() {
		return this.io.getIntField(this, 27);
	}
	/** last visit ip */
	@Field(27) 
	public UserRecord last_ip(int last_ip) {
		this.io.setIntField(this, 27, last_ip);
		return this;
	}
	/** balance */
	@Field(28) 
	public double balance() {
		return this.io.getDoubleField(this, 28);
	}
	/** balance */
	@Field(28) 
	public UserRecord balance(double balance) {
		this.io.setDoubleField(this, 28, balance);
		return this;
	}
	/** previous month balance */
	@Field(29) 
	public double prevmonthbalance() {
		return this.io.getDoubleField(this, 29);
	}
	/** previous month balance */
	@Field(29) 
	public UserRecord prevmonthbalance(double prevmonthbalance) {
		this.io.setDoubleField(this, 29, prevmonthbalance);
		return this;
	}
	/** previous day balance */
	@Field(30) 
	public double prevbalance() {
		return this.io.getDoubleField(this, 30);
	}
	/** previous day balance */
	@Field(30) 
	public UserRecord prevbalance(double prevbalance) {
		this.io.setDoubleField(this, 30, prevbalance);
		return this;
	}
	/** credit */
	@Field(31) 
	public double credit() {
		return this.io.getDoubleField(this, 31);
	}
	/** credit */
	@Field(31) 
	public UserRecord credit(double credit) {
		this.io.setDoubleField(this, 31, credit);
		return this;
	}
	/** accumulated interest rate */
	@Field(32) 
	public double interestrate() {
		return this.io.getDoubleField(this, 32);
	}
	/** accumulated interest rate */
	@Field(32) 
	public UserRecord interestrate(double interestrate) {
		this.io.setDoubleField(this, 32, interestrate);
		return this;
	}
	/** taxes */
	@Field(33) 
	public double taxes() {
		return this.io.getDoubleField(this, 33);
	}
	/** taxes */
	@Field(33) 
	public UserRecord taxes(double taxes) {
		this.io.setDoubleField(this, 33, taxes);
		return this;
	}
	/** previous month equity */
	@Field(34) 
	public double prevmonthequity() {
		return this.io.getDoubleField(this, 34);
	}
	/** previous month equity */
	@Field(34) 
	public UserRecord prevmonthequity(double prevmonthequity) {
		this.io.setDoubleField(this, 34, prevmonthequity);
		return this;
	}
	/** previous day equity */
	@Field(35) 
	public double prevequity() {
		return this.io.getDoubleField(this, 35);
	}
	/** previous day equity */
	@Field(35) 
	public UserRecord prevequity(double prevequity) {
		this.io.setDoubleField(this, 35, prevequity);
		return this;
	}
	/**
	 * for future use<br>
	 * C type : double[2]
	 */
	@Array({2}) 
	@Field(36) 
	public Pointer<Double > reserved2() {
		return this.io.getPointerField(this, 36);
	}
	/**
	 * one-time password secret<br>
	 * C type : char[32]
	 */
	@Array({32}) 
	@Field(37) 
	public Pointer<Byte > otp_secret() {
		return this.io.getPointerField(this, 37);
	}
	/**
	 * secure data reserved<br>
	 * C type : char[240]
	 */
	@Array({240}) 
	@Field(38) 
	public Pointer<Byte > secure_reserved() {
		return this.io.getPointerField(this, 38);
	}
	/** enable send reports by email */
	@Field(39) 
	public int send_reports() {
		return this.io.getIntField(this, 39);
	}
	/** enable send reports by email */
	@Field(39) 
	public UserRecord send_reports(int send_reports) {
		this.io.setIntField(this, 39, send_reports);
		return this;
	}
	/** MQ client identificator */
	@Field(40) 
	public int mqid() {
		return this.io.getIntField(this, 40);
	}
	/** MQ client identificator */
	@Field(40) 
	public UserRecord mqid(int mqid) {
		this.io.setIntField(this, 40, mqid);
		return this;
	}
	/** Conversion Error : COLORREF (failed to convert type to Java (undefined type)) */
	/**
	 * for future use<br>
	 * C type : char[40]
	 */
	@Array({40}) 
	@Field(42) 
	public Pointer<Byte > unused() {
		return this.io.getPointerField(this, 42);
	}
	/**
	 * for API usage<br>
	 * C type : char[16]
	 */
	@Array({16}) 
	@Field(43) 
	public Pointer<Byte > api_data() {
		return this.io.getPointerField(this, 43);
	}
}
