package com.mmtap.trader.bridjapi;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.TimeT;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * ---<br>
 * <i>native declaration : MT4ManagerAPI.h:514</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("MT4ManagerAPI") 
public abstract class ConSymbol extends StructObject {
	static {
		BridJ.register();
	}
	/**
	 * name<br>
	 * C type : char[12]
	 */
	@Array({12}) 
	@Field(0) 
	public Pointer<Byte > symbol() {
		return this.io.getPointerField(this, 0);
	}
	/**
	 * description<br>
	 * C type : char[64]
	 */
	@Array({64}) 
	@Field(1) 
	public Pointer<Byte > description() {
		return this.io.getPointerField(this, 1);
	}
	/**
	 * synonym<br>
	 * C type : char[12]
	 */
	@Array({12}) 
	@Field(2) 
	public Pointer<Byte > source() {
		return this.io.getPointerField(this, 2);
	}
	/**
	 * currency<br>
	 * C type : char[12]
	 */
	@Array({12}) 
	@Field(3) 
	public Pointer<Byte > currency() {
		return this.io.getPointerField(this, 3);
	}
	/** security group (see ConSymbolGroup) */
	@Field(4) 
	public int type() {
		return this.io.getIntField(this, 4);
	}
	/** security group (see ConSymbolGroup) */
	@Field(4) 
	public ConSymbol type(int type) {
		this.io.setIntField(this, 4, type);
		return this;
	}
	/** security precision */
	@Field(5) 
	public int digits() {
		return this.io.getIntField(this, 5);
	}
	/** security precision */
	@Field(5) 
	public ConSymbol digits(int digits) {
		this.io.setIntField(this, 5, digits);
		return this;
	}
	/** trade mode */
	@Field(6) 
	public int trade() {
		return this.io.getIntField(this, 6);
	}
	/** trade mode */
	@Field(6) 
	public ConSymbol trade(int trade) {
		this.io.setIntField(this, 6, trade);
		return this;
	}
	/** Conversion Error : COLORREF (failed to convert type to Java (undefined type)) */
	/** symbols index */
	@Field(8) 
	public int count() {
		return this.io.getIntField(this, 8);
	}
	/** symbols index */
	@Field(8) 
	public ConSymbol count(int count) {
		this.io.setIntField(this, 8, count);
		return this;
	}
	/** symbols index in market watch */
	@Field(9) 
	public int count_original() {
		return this.io.getIntField(this, 9);
	}
	/** symbols index in market watch */
	@Field(9) 
	public ConSymbol count_original(int count_original) {
		this.io.setIntField(this, 9, count_original);
		return this;
	}
	/** C type : int[7] */
	@Array({7}) 
	@Field(10) 
	public Pointer<Integer > external_unused() {
		return this.io.getPointerField(this, 10);
	}
	/** allow real time quotes */
	@Field(11) 
	public int realtime() {
		return this.io.getIntField(this, 11);
	}
	/** allow real time quotes */
	@Field(11) 
	public ConSymbol realtime(int realtime) {
		this.io.setIntField(this, 11, realtime);
		return this;
	}
	/** trades starting date (UNIX time) */
	@Field(12) 
	public TimeT starting() {
		return this.io.getTimeTField(this, 12);
	}
	/** trades starting date (UNIX time) */
	@Field(12) 
	public ConSymbol starting(TimeT starting) {
		this.io.setTimeTField(this, 12, starting);
		return this;
	}
	/** trades end date      (UNIX time) */
	@Field(13) 
	public TimeT expiration() {
		return this.io.getTimeTField(this, 13);
	}
	/** trades end date      (UNIX time) */
	@Field(13) 
	public ConSymbol expiration(TimeT expiration) {
		this.io.setTimeTField(this, 13, expiration);
		return this;
	}
	/**
	 * quote & trade sessions<br>
	 * C type : ConSessions[7]
	 */
	@Array({7}) 
	@Field(14) 
	public Pointer<ConSessions > sessions() {
		return this.io.getPointerField(this, 14);
	}
	/** profit calculation mode */
	@Field(15) 
	public int profit_mode() {
		return this.io.getIntField(this, 15);
	}
	/** profit calculation mode */
	@Field(15) 
	public ConSymbol profit_mode(int profit_mode) {
		this.io.setIntField(this, 15, profit_mode);
		return this;
	}
	/** reserved */
	@Field(16) 
	public int profit_reserved() {
		return this.io.getIntField(this, 16);
	}
	/** reserved */
	@Field(16) 
	public ConSymbol profit_reserved(int profit_reserved) {
		this.io.setIntField(this, 16, profit_reserved);
		return this;
	}
	/** filter value */
	@Field(17) 
	public int filter() {
		return this.io.getIntField(this, 17);
	}
	/** filter value */
	@Field(17) 
	public ConSymbol filter(int filter) {
		this.io.setIntField(this, 17, filter);
		return this;
	}
	/** filtration parameter */
	@Field(18) 
	public int filter_counter() {
		return this.io.getIntField(this, 18);
	}
	/** filtration parameter */
	@Field(18) 
	public ConSymbol filter_counter(int filter_counter) {
		this.io.setIntField(this, 18, filter_counter);
		return this;
	}
	/** max. permissible deviation from last quote (percents) */
	@Field(19) 
	public double filter_limit() {
		return this.io.getDoubleField(this, 19);
	}
	/** max. permissible deviation from last quote (percents) */
	@Field(19) 
	public ConSymbol filter_limit(double filter_limit) {
		this.io.setDoubleField(this, 19, filter_limit);
		return this;
	}
	/** smoothing */
	@Field(20) 
	public int filter_smoothing() {
		return this.io.getIntField(this, 20);
	}
	/** smoothing */
	@Field(20) 
	public ConSymbol filter_smoothing(int filter_smoothing) {
		this.io.setIntField(this, 20, filter_smoothing);
		return this;
	}
	/** reserved */
	@Field(21) 
	public float filter_reserved() {
		return this.io.getFloatField(this, 21);
	}
	/** reserved */
	@Field(21) 
	public ConSymbol filter_reserved(float filter_reserved) {
		this.io.setFloatField(this, 21, filter_reserved);
		return this;
	}
	/** enable to log quotes */
	@Field(22) 
	public int logging() {
		return this.io.getIntField(this, 22);
	}
	/** enable to log quotes */
	@Field(22) 
	public ConSymbol logging(int logging) {
		this.io.setIntField(this, 22, logging);
		return this;
	}
	/** spread */
	@Field(23) 
	public int spread() {
		return this.io.getIntField(this, 23);
	}
	/** spread */
	@Field(23) 
	public ConSymbol spread(int spread) {
		this.io.setIntField(this, 23, spread);
		return this;
	}
	/** spread balance */
	@Field(24) 
	public int spread_balance() {
		return this.io.getIntField(this, 24);
	}
	/** spread balance */
	@Field(24) 
	public ConSymbol spread_balance(int spread_balance) {
		this.io.setIntField(this, 24, spread_balance);
		return this;
	}
	/** execution mode */
	@Field(25) 
	public int exemode() {
		return this.io.getIntField(this, 25);
	}
	/** execution mode */
	@Field(25) 
	public ConSymbol exemode(int exemode) {
		this.io.setIntField(this, 25, exemode);
		return this;
	}
	/** enable swaps */
	@Field(26) 
	public int swap_enable() {
		return this.io.getIntField(this, 26);
	}
	/** enable swaps */
	@Field(26) 
	public ConSymbol swap_enable(int swap_enable) {
		this.io.setIntField(this, 26, swap_enable);
		return this;
	}
	/** swap type */
	@Field(27) 
	public int swap_type() {
		return this.io.getIntField(this, 27);
	}
	/** swap type */
	@Field(27) 
	public ConSymbol swap_type(int swap_type) {
		this.io.setIntField(this, 27, swap_type);
		return this;
	}
	/** swaps values for long & short postions */
	@Field(28) 
	public double swap_long() {
		return this.io.getDoubleField(this, 28);
	}
	/** swaps values for long & short postions */
	@Field(28) 
	public ConSymbol swap_long(double swap_long) {
		this.io.setDoubleField(this, 28, swap_long);
		return this;
	}
	/** swaps values for long & short postions */
	@Field(29) 
	public double swap_short() {
		return this.io.getDoubleField(this, 29);
	}
	/** swaps values for long & short postions */
	@Field(29) 
	public ConSymbol swap_short(double swap_short) {
		this.io.setDoubleField(this, 29, swap_short);
		return this;
	}
	/** triple rollover day-0-Monday,1-Tuesday...4-Friday */
	@Field(30) 
	public int swap_rollover3days() {
		return this.io.getIntField(this, 30);
	}
	/** triple rollover day-0-Monday,1-Tuesday...4-Friday */
	@Field(30) 
	public ConSymbol swap_rollover3days(int swap_rollover3days) {
		this.io.setIntField(this, 30, swap_rollover3days);
		return this;
	}
	/** contract size */
	@Field(31) 
	public double contract_size() {
		return this.io.getDoubleField(this, 31);
	}
	/** contract size */
	@Field(31) 
	public ConSymbol contract_size(double contract_size) {
		this.io.setDoubleField(this, 31, contract_size);
		return this;
	}
	/** one tick value */
	@Field(32) 
	public double tick_value() {
		return this.io.getDoubleField(this, 32);
	}
	/** one tick value */
	@Field(32) 
	public ConSymbol tick_value(double tick_value) {
		this.io.setDoubleField(this, 32, tick_value);
		return this;
	}
	/** one tick size */
	@Field(33) 
	public double tick_size() {
		return this.io.getDoubleField(this, 33);
	}
	/** one tick size */
	@Field(33) 
	public ConSymbol tick_size(double tick_size) {
		this.io.setDoubleField(this, 33, tick_size);
		return this;
	}
	/** stops deviation value */
	@Field(34) 
	public int stops_level() {
		return this.io.getIntField(this, 34);
	}
	/** stops deviation value */
	@Field(34) 
	public ConSymbol stops_level(int stops_level) {
		this.io.setIntField(this, 34, stops_level);
		return this;
	}
	/** GTC mode { ORDERS_DAILY, ORDERS_GTC, ORDERS_DAILY_NO_STOPS } */
	@Field(35) 
	public int gtc_pendings() {
		return this.io.getIntField(this, 35);
	}
	/** GTC mode { ORDERS_DAILY, ORDERS_GTC, ORDERS_DAILY_NO_STOPS } */
	@Field(35) 
	public ConSymbol gtc_pendings(int gtc_pendings) {
		this.io.setIntField(this, 35, gtc_pendings);
		return this;
	}
	/** margin calculation mode */
	@Field(36) 
	public int margin_mode() {
		return this.io.getIntField(this, 36);
	}
	/** margin calculation mode */
	@Field(36) 
	public ConSymbol margin_mode(int margin_mode) {
		this.io.setIntField(this, 36, margin_mode);
		return this;
	}
	/** initial margin */
	@Field(37) 
	public double margin_initial() {
		return this.io.getDoubleField(this, 37);
	}
	/** initial margin */
	@Field(37) 
	public ConSymbol margin_initial(double margin_initial) {
		this.io.setDoubleField(this, 37, margin_initial);
		return this;
	}
	/** margin maintenance */
	@Field(38) 
	public double margin_maintenance() {
		return this.io.getDoubleField(this, 38);
	}
	/** margin maintenance */
	@Field(38) 
	public ConSymbol margin_maintenance(double margin_maintenance) {
		this.io.setDoubleField(this, 38, margin_maintenance);
		return this;
	}
	/** hedged margin */
	@Field(39) 
	public double margin_hedged() {
		return this.io.getDoubleField(this, 39);
	}
	/** hedged margin */
	@Field(39) 
	public ConSymbol margin_hedged(double margin_hedged) {
		this.io.setDoubleField(this, 39, margin_hedged);
		return this;
	}
	/** margin divider */
	@Field(40) 
	public double margin_divider() {
		return this.io.getDoubleField(this, 40);
	}
	/** margin divider */
	@Field(40) 
	public ConSymbol margin_divider(double margin_divider) {
		this.io.setDoubleField(this, 40, margin_divider);
		return this;
	}
	/** point size-(1/(10^digits) */
	@Field(41) 
	public double point() {
		return this.io.getDoubleField(this, 41);
	}
	/** point size-(1/(10^digits) */
	@Field(41) 
	public ConSymbol point(double point) {
		this.io.setDoubleField(this, 41, point);
		return this;
	}
	/** multiply 10^digits */
	@Field(42) 
	public double multiply() {
		return this.io.getDoubleField(this, 42);
	}
	/** multiply 10^digits */
	@Field(42) 
	public ConSymbol multiply(double multiply) {
		this.io.setDoubleField(this, 42, multiply);
		return this;
	}
	/** tickvalue for bid */
	@Field(43) 
	public double bid_tickvalue() {
		return this.io.getDoubleField(this, 43);
	}
	/** tickvalue for bid */
	@Field(43) 
	public ConSymbol bid_tickvalue(double bid_tickvalue) {
		this.io.setDoubleField(this, 43, bid_tickvalue);
		return this;
	}
	/** tickvalue for ask */
	@Field(44) 
	public double ask_tickvalue() {
		return this.io.getDoubleField(this, 44);
	}
	/** tickvalue for ask */
	@Field(44) 
	public ConSymbol ask_tickvalue(double ask_tickvalue) {
		this.io.setDoubleField(this, 44, ask_tickvalue);
		return this;
	}
	/** allow only BUY positions */
	@Field(45) 
	public int long_only() {
		return this.io.getIntField(this, 45);
	}
	/** allow only BUY positions */
	@Field(45) 
	public ConSymbol long_only(int long_only) {
		this.io.setIntField(this, 45, long_only);
		return this;
	}
	/** max. volume for Instant Execution */
	@Field(46) 
	public int instant_max_volume() {
		return this.io.getIntField(this, 46);
	}
	/** max. volume for Instant Execution */
	@Field(46) 
	public ConSymbol instant_max_volume(int instant_max_volume) {
		this.io.setIntField(this, 46, instant_max_volume);
		return this;
	}
	/**
	 * currency of margin requirments<br>
	 * C type : char[12]
	 */
	@Array({12}) 
	@Field(47) 
	public Pointer<Byte > margin_currency() {
		return this.io.getPointerField(this, 47);
	}
	/** modification freeze level */
	@Field(48) 
	public int freeze_level() {
		return this.io.getIntField(this, 48);
	}
	/** modification freeze level */
	@Field(48) 
	public ConSymbol freeze_level(int freeze_level) {
		this.io.setIntField(this, 48, freeze_level);
		return this;
	}
	/** strong hedged margin mode */
	@Field(49) 
	public int margin_hedged_strong() {
		return this.io.getIntField(this, 49);
	}
	/** strong hedged margin mode */
	@Field(49) 
	public ConSymbol margin_hedged_strong(int margin_hedged_strong) {
		this.io.setIntField(this, 49, margin_hedged_strong);
		return this;
	}
	/** value date */
	@Field(50) 
	public TimeT value_date() {
		return this.io.getTimeTField(this, 50);
	}
	/** value date */
	@Field(50) 
	public ConSymbol value_date(TimeT value_date) {
		this.io.setTimeTField(this, 50, value_date);
		return this;
	}
	/** quotes delay after session start */
	@Field(51) 
	public int quotes_delay() {
		return this.io.getIntField(this, 51);
	}
	/** quotes delay after session start */
	@Field(51) 
	public ConSymbol quotes_delay(int quotes_delay) {
		this.io.setIntField(this, 51, quotes_delay);
		return this;
	}
	/** use open price at swaps calculation in SWAP_BY_INTEREST mode */
	@Field(52) 
	public int swap_openprice() {
		return this.io.getIntField(this, 52);
	}
	/** use open price at swaps calculation in SWAP_BY_INTEREST mode */
	@Field(52) 
	public ConSymbol swap_openprice(int swap_openprice) {
		this.io.setIntField(this, 52, swap_openprice);
		return this;
	}
	/** charge variation margin on rollover */
	@Field(53) 
	public int swap_variation_margin() {
		return this.io.getIntField(this, 53);
	}
	/** charge variation margin on rollover */
	@Field(53) 
	public ConSymbol swap_variation_margin(int swap_variation_margin) {
		this.io.setIntField(this, 53, swap_variation_margin);
		return this;
	}
	/**
	 * reserved<br>
	 * C type : int[21]
	 */
	@Array({21}) 
	@Field(54) 
	public Pointer<Integer > unused() {
		return this.io.getPointerField(this, 54);
	}
}
