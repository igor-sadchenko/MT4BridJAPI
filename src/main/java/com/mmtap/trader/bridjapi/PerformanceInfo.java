package com.mmtap.trader.bridjapi;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.TimeT;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:887</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("MT4ManagerAPI") 
public class PerformanceInfo extends StructObject {
	static {
		BridJ.register();
	}
	@Field(0) 
	public TimeT ctm() {
		return this.io.getTimeTField(this, 0);
	}
	@Field(0) 
	public PerformanceInfo ctm(TimeT ctm) {
		this.io.setTimeTField(this, 0, ctm);
		return this;
	}
	/** online users */
	@Field(1) 
	public short users() {
		return this.io.getShortField(this, 1);
	}
	/** online users */
	@Field(1) 
	public PerformanceInfo users(short users) {
		this.io.setShortField(this, 1, users);
		return this;
	}
	/** processor loading (%) */
	@Field(2) 
	public short cpu() {
		return this.io.getShortField(this, 2);
	}
	/** processor loading (%) */
	@Field(2) 
	public PerformanceInfo cpu(short cpu) {
		this.io.setShortField(this, 2, cpu);
		return this;
	}
	/** free memory (Kb) */
	@Field(3) 
	public int freemem() {
		return this.io.getIntField(this, 3);
	}
	/** free memory (Kb) */
	@Field(3) 
	public PerformanceInfo freemem(int freemem) {
		this.io.setIntField(this, 3, freemem);
		return this;
	}
	/** network activity (Kb/s) */
	@Field(4) 
	public int network() {
		return this.io.getIntField(this, 4);
	}
	/** network activity (Kb/s) */
	@Field(4) 
	public PerformanceInfo network(int network) {
		this.io.setIntField(this, 4, network);
		return this;
	}
	/** all open sockets in system */
	@Field(5) 
	public int sockets() {
		return this.io.getIntField(this, 5);
	}
	/** all open sockets in system */
	@Field(5) 
	public PerformanceInfo sockets(int sockets) {
		this.io.setIntField(this, 5, sockets);
		return this;
	}
	public PerformanceInfo() {
		super();
	}
	public PerformanceInfo(Pointer pointer) {
		super(pointer);
	}
}
