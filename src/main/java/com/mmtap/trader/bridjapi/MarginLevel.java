package com.mmtap.trader.bridjapi;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:1156</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("MT4ManagerAPI") 
public class MarginLevel extends StructObject {
	static {
		BridJ.register();
	}
	/** user login */
	@Field(0) 
	public int login() {
		return this.io.getIntField(this, 0);
	}
	/** user login */
	@Field(0) 
	public MarginLevel login(int login) {
		this.io.setIntField(this, 0, login);
		return this;
	}
	/**
	 * user group<br>
	 * C type : char[16]
	 */
	@Array({16}) 
	@Field(1) 
	public Pointer<Byte > group() {
		return this.io.getPointerField(this, 1);
	}
	/** user leverage */
	@Field(2) 
	public int leverage() {
		return this.io.getIntField(this, 2);
	}
	/** user leverage */
	@Field(2) 
	public MarginLevel leverage(int leverage) {
		this.io.setIntField(this, 2, leverage);
		return this;
	}
	/** (internal) */
	@Field(3) 
	public int updated() {
		return this.io.getIntField(this, 3);
	}
	/** (internal) */
	@Field(3) 
	public MarginLevel updated(int updated) {
		this.io.setIntField(this, 3, updated);
		return this;
	}
	/** balance+credit */
	@Field(4) 
	public double balance() {
		return this.io.getDoubleField(this, 4);
	}
	/** balance+credit */
	@Field(4) 
	public MarginLevel balance(double balance) {
		this.io.setDoubleField(this, 4, balance);
		return this;
	}
	/** equity */
	@Field(5) 
	public double equity() {
		return this.io.getDoubleField(this, 5);
	}
	/** equity */
	@Field(5) 
	public MarginLevel equity(double equity) {
		this.io.setDoubleField(this, 5, equity);
		return this;
	}
	/** lots */
	@Field(6) 
	public int volume() {
		return this.io.getIntField(this, 6);
	}
	/** lots */
	@Field(6) 
	public MarginLevel volume(int volume) {
		this.io.setIntField(this, 6, volume);
		return this;
	}
	/** margin requirements */
	@Field(7) 
	public double margin() {
		return this.io.getDoubleField(this, 7);
	}
	/** margin requirements */
	@Field(7) 
	public MarginLevel margin(double margin) {
		this.io.setDoubleField(this, 7, margin);
		return this;
	}
	/** free margin */
	@Field(8) 
	public double margin_free() {
		return this.io.getDoubleField(this, 8);
	}
	/** free margin */
	@Field(8) 
	public MarginLevel margin_free(double margin_free) {
		this.io.setDoubleField(this, 8, margin_free);
		return this;
	}
	/** margin level */
	@Field(9) 
	public double margin_level() {
		return this.io.getDoubleField(this, 9);
	}
	/** margin level */
	@Field(9) 
	public MarginLevel margin_level(double margin_level) {
		this.io.setDoubleField(this, 9, margin_level);
		return this;
	}
	/** margin controlling type (percent/currency) */
	@Field(10) 
	public int margin_type() {
		return this.io.getIntField(this, 10);
	}
	/** margin controlling type (percent/currency) */
	@Field(10) 
	public MarginLevel margin_type(int margin_type) {
		this.io.setIntField(this, 10, margin_type);
		return this;
	}
	/** level type(ok/margincall/stopout) */
	@Field(11) 
	public int level_type() {
		return this.io.getIntField(this, 11);
	}
	/** level type(ok/margincall/stopout) */
	@Field(11) 
	public MarginLevel level_type(int level_type) {
		this.io.setIntField(this, 11, level_type);
		return this;
	}
	public MarginLevel() {
		super();
	}
	public MarginLevel(Pointer pointer) {
		super(pointer);
	}
}
