package com.mmtap.trader.bridjapi;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.TimeT;
import org.bridj.ann.Array;
import org.bridj.ann.CLong;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:1372</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("MT4ManagerAPI") 
public class NewsTopic extends StructObject {
	static {
		BridJ.register();
	}
	/** news key */
	@CLong 
	@Field(0) 
	public long key() {
		return this.io.getCLongField(this, 0);
	}
	/** news key */
	@CLong 
	@Field(0) 
	public NewsTopic key(long key) {
		this.io.setCLongField(this, 0, key);
		return this;
	}
	/** news time */
	@Field(1) 
	public TimeT time() {
		return this.io.getTimeTField(this, 1);
	}
	/** news time */
	@Field(1) 
	public NewsTopic time(TimeT time) {
		this.io.setTimeTField(this, 1, time);
		return this;
	}
	/**
	 * news source time ("yyyy/mm/dd hh:mm:ss")<br>
	 * C type : char[32]
	 */
	@Array({32}) 
	@Field(2) 
	public Pointer<Byte > ctm() {
		return this.io.getPointerField(this, 2);
	}
	/**
	 * news topic<br>
	 * C type : char[256]
	 */
	@Array({256}) 
	@Field(3) 
	public Pointer<Byte > topic() {
		return this.io.getPointerField(this, 3);
	}
	/**
	 * news category<br>
	 * C type : char[64]
	 */
	@Array({64}) 
	@Field(4) 
	public Pointer<Byte > category() {
		return this.io.getPointerField(this, 4);
	}
	/**
	 * news keywords<br>
	 * C type : char[256]
	 */
	@Array({256}) 
	@Field(5) 
	public Pointer<Byte > keywords() {
		return this.io.getPointerField(this, 5);
	}
	/**
	 * body (if present)<br>
	 * C type : char*
	 */
	@Field(6) 
	public Pointer<Byte > body() {
		return this.io.getPointerField(this, 6);
	}
	/**
	 * body (if present)<br>
	 * C type : char*
	 */
	@Field(6) 
	public NewsTopic body(Pointer<Byte > body) {
		this.io.setPointerField(this, 6, body);
		return this;
	}
	/** body length */
	@Field(7) 
	public int bodylen() {
		return this.io.getIntField(this, 7);
	}
	/** body length */
	@Field(7) 
	public NewsTopic bodylen(int bodylen) {
		this.io.setIntField(this, 7, bodylen);
		return this;
	}
	/** readed flag */
	@Field(8) 
	public int readed() {
		return this.io.getIntField(this, 8);
	}
	/** readed flag */
	@Field(8) 
	public NewsTopic readed(int readed) {
		this.io.setIntField(this, 8, readed);
		return this;
	}
	/** news priority: 0-general, 1-high */
	@Field(9) 
	public int priority() {
		return this.io.getIntField(this, 9);
	}
	/** news priority: 0-general, 1-high */
	@Field(9) 
	public NewsTopic priority(int priority) {
		this.io.setIntField(this, 9, priority);
		return this;
	}
	/** news LANGID */
	@Field(10) 
	public int langid() {
		return this.io.getIntField(this, 10);
	}
	/** news LANGID */
	@Field(10) 
	public NewsTopic langid(int langid) {
		this.io.setIntField(this, 10, langid);
		return this;
	}
	/** C type : int[1] */
	@Array({1}) 
	@Field(11) 
	public Pointer<Integer > reserved() {
		return this.io.getPointerField(this, 11);
	}
	public NewsTopic() {
		super();
	}
	public NewsTopic(Pointer pointer) {
		super(pointer);
	}
}
