package com.mmtap.trader.bridjapi;
import java.util.Collections;
import java.util.Iterator;
import org.bridj.BridJ;
import org.bridj.FlagSet;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.CLong;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:1391</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("MT4ManagerAPI") 
public abstract class NewsTopicNew extends StructObject {
	static {
		BridJ.register();
	}
	/**
	 * enum values<br>
	 * <i>native declaration : MT4ManagerAPI.h:1394</i>
	 */
	public enum constants implements IntValuedEnum<constants > {
		/** max. body len */
		MAX_NEWS_BODY_LEN(15 * 1024 * 1024);
		constants(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<constants > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<constants > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * enum values<br>
	 * <i>native declaration : MT4ManagerAPI.h:1399</i>
	 */
	public enum EnNewsFlags implements IntValuedEnum<EnNewsFlags > {
		/** priority flag */
		FLAG_PRIORITY(1),
		/** calendar item flag */
		FLAG_CALENDAR(2),
		/** MIME news content */
		FLAG_MIME(4),
		/** allow body for demo accounts */
		FLAG_ALLOW_DEMO(8);
		EnNewsFlags(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<EnNewsFlags > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<EnNewsFlags > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/** news key */
	@CLong 
	@Field(0) 
	public long key() {
		return this.io.getCLongField(this, 0);
	}
	/** news key */
	@CLong 
	@Field(0) 
	public NewsTopicNew key(long key) {
		this.io.setCLongField(this, 0, key);
		return this;
	}
	/** news language (WinAPI LANGID) */
	@Field(1) 
	public int language() {
		return this.io.getIntField(this, 1);
	}
	/** news language (WinAPI LANGID) */
	@Field(1) 
	public NewsTopicNew language(int language) {
		this.io.setIntField(this, 1, language);
		return this;
	}
	/**
	 * news subject<br>
	 * C type : wchar_t[256]
	 */
	@Array({256}) 
	@Field(2) 
	public Pointer<Character > subject() {
		return this.io.getPointerField(this, 2);
	}
	/**
	 * news category<br>
	 * C type : wchar_t[256]
	 */
	@Array({256}) 
	@Field(3) 
	public Pointer<Character > category() {
		return this.io.getPointerField(this, 3);
	}
	/** EnNewsFlags */
	@Field(4) 
	public int flags() {
		return this.io.getIntField(this, 4);
	}
	/** EnNewsFlags */
	@Field(4) 
	public NewsTopicNew flags(int flags) {
		this.io.setIntField(this, 4, flags);
		return this;
	}
	/**
	 * body<br>
	 * C type : wchar_t*
	 */
	@Field(5) 
	public Pointer<Character > body() {
		return this.io.getPointerField(this, 5);
	}
	/**
	 * body<br>
	 * C type : wchar_t*
	 */
	@Field(5) 
	public NewsTopicNew body(Pointer<Character > body) {
		this.io.setPointerField(this, 5, body);
		return this;
	}
	/** body length */
	@Field(6) 
	public int body_len() {
		return this.io.getIntField(this, 6);
	}
	/** body length */
	@Field(6) 
	public NewsTopicNew body_len(int body_len) {
		this.io.setIntField(this, 6, body_len);
		return this;
	}
	/**
	 * list of languages available for news<br>
	 * C type : UINT[32]
	 */
	@Array({32}) 
	@Field(7) 
	public Pointer<Integer > languages_list() {
		return this.io.getPointerField(this, 7);
	}
	/** Conversion Error : INT64 (failed to convert type to Java (undefined type)) */
	/**
	 * reserved<br>
	 * C type : UINT[30]
	 */
	@Array({30}) 
	@Field(9) 
	public Pointer<Integer > reserved() {
		return this.io.getPointerField(this, 9);
	}
}
