package com.mmtap.trader.bridjapi;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:1421</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("MT4ManagerAPI") 
public class ServerLog extends StructObject {
	static {
		BridJ.register();
	}
	/** code */
	@Field(0) 
	public int code() {
		return this.io.getIntField(this, 0);
	}
	/** code */
	@Field(0) 
	public ServerLog code(int code) {
		this.io.setIntField(this, 0, code);
		return this;
	}
	/**
	 * time<br>
	 * C type : char[24]
	 */
	@Array({24}) 
	@Field(1) 
	public Pointer<Byte > time() {
		return this.io.getPointerField(this, 1);
	}
	/**
	 * ip<br>
	 * C type : char[256]
	 */
	@Array({256}) 
	@Field(2) 
	public Pointer<Byte > ip() {
		return this.io.getPointerField(this, 2);
	}
	/**
	 * message<br>
	 * C type : char[512]
	 */
	@Array({512}) 
	@Field(3) 
	public Pointer<Byte > message() {
		return this.io.getPointerField(this, 3);
	}
	public ServerLog() {
		super();
	}
	public ServerLog(Pointer pointer) {
		super(pointer);
	}
}
