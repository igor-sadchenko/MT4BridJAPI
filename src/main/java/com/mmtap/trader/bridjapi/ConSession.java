package com.mmtap.trader.bridjapi;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:491</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("MT4ManagerAPI") 
public class ConSession extends StructObject {
	static {
		BridJ.register();
	}
	/** session open  time: hour & minute */
	@Field(0) 
	public short open_hour() {
		return this.io.getShortField(this, 0);
	}
	/** session open  time: hour & minute */
	@Field(0) 
	public ConSession open_hour(short open_hour) {
		this.io.setShortField(this, 0, open_hour);
		return this;
	}
	/** session open  time: hour & minute */
	@Field(1) 
	public short open_min() {
		return this.io.getShortField(this, 1);
	}
	/** session open  time: hour & minute */
	@Field(1) 
	public ConSession open_min(short open_min) {
		this.io.setShortField(this, 1, open_min);
		return this;
	}
	/** session close time: hour & minute */
	@Field(2) 
	public short close_hour() {
		return this.io.getShortField(this, 2);
	}
	/** session close time: hour & minute */
	@Field(2) 
	public ConSession close_hour(short close_hour) {
		this.io.setShortField(this, 2, close_hour);
		return this;
	}
	/** session close time: hour & minute */
	@Field(3) 
	public short close_min() {
		return this.io.getShortField(this, 3);
	}
	/** session close time: hour & minute */
	@Field(3) 
	public ConSession close_min(short close_min) {
		this.io.setShortField(this, 3, close_min);
		return this;
	}
	/** internal data */
	@Field(4) 
	public int open() {
		return this.io.getIntField(this, 4);
	}
	/** internal data */
	@Field(4) 
	public ConSession open(int open) {
		this.io.setIntField(this, 4, open);
		return this;
	}
	/** internal data */
	@Field(5) 
	public int close() {
		return this.io.getIntField(this, 5);
	}
	/** internal data */
	@Field(5) 
	public ConSession close(int close) {
		this.io.setIntField(this, 5, close);
		return this;
	}
	/**
	 * internal data<br>
	 * C type : short[7]
	 */
	@Array({7}) 
	@Field(6) 
	public Pointer<Short > align() {
		return this.io.getPointerField(this, 6);
	}
	public ConSession() {
		super();
	}
	public ConSession(Pointer pointer) {
		super(pointer);
	}
}
