package com.mmtap.trader.bridjapi;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.CLong;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:449</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("MT4ManagerAPI") 
public class ConManager extends StructObject {
	static {
		BridJ.register();
	}
	/** login */
	@Field(0) 
	public int login() {
		return this.io.getIntField(this, 0);
	}
	/** login */
	@Field(0) 
	public ConManager login(int login) {
		this.io.setIntField(this, 0, login);
		return this;
	}
	/** right to add & change client records */
	@Field(1) 
	public int manager() {
		return this.io.getIntField(this, 1);
	}
	/** right to add & change client records */
	@Field(1) 
	public ConManager manager(int manager) {
		this.io.setIntField(this, 1, manager);
		return this;
	}
	/** right to balance & credit management */
	@Field(2) 
	public int money() {
		return this.io.getIntField(this, 2);
	}
	/** right to balance & credit management */
	@Field(2) 
	public ConManager money(int money) {
		this.io.setIntField(this, 2, money);
		return this;
	}
	/** right to see online users */
	@Field(3) 
	public int online() {
		return this.io.getIntField(this, 3);
	}
	/** right to see online users */
	@Field(3) 
	public ConManager online(int online) {
		this.io.setIntField(this, 3, online);
		return this;
	}
	/** right to use analyzer */
	@Field(4) 
	public int riskman() {
		return this.io.getIntField(this, 4);
	}
	/** right to use analyzer */
	@Field(4) 
	public ConManager riskman(int riskman) {
		this.io.setIntField(this, 4, riskman);
		return this;
	}
	/** right to deal */
	@Field(5) 
	public int broker() {
		return this.io.getIntField(this, 5);
	}
	/** right to deal */
	@Field(5) 
	public ConManager broker(int broker) {
		this.io.setIntField(this, 5, broker);
		return this;
	}
	/** right to server administration */
	@Field(6) 
	public int admin() {
		return this.io.getIntField(this, 6);
	}
	/** right to server administration */
	@Field(6) 
	public ConManager admin(int admin) {
		this.io.setIntField(this, 6, admin);
		return this;
	}
	/** right to see logs */
	@Field(7) 
	public int logs() {
		return this.io.getIntField(this, 7);
	}
	/** right to see logs */
	@Field(7) 
	public ConManager logs(int logs) {
		this.io.setIntField(this, 7, logs);
		return this;
	}
	/** right to see reports */
	@Field(8) 
	public int reports() {
		return this.io.getIntField(this, 8);
	}
	/** right to see reports */
	@Field(8) 
	public ConManager reports(int reports) {
		this.io.setIntField(this, 8, reports);
		return this;
	}
	/** right to add/modify/delete trades */
	@Field(9) 
	public int trades() {
		return this.io.getIntField(this, 9);
	}
	/** right to add/modify/delete trades */
	@Field(9) 
	public ConManager trades(int trades) {
		this.io.setIntField(this, 9, trades);
		return this;
	}
	/** right to change spread, spread balance, stop levels, execution mode and send quotes */
	@Field(10) 
	public int market_watch() {
		return this.io.getIntField(this, 10);
	}
	/** right to change spread, spread balance, stop levels, execution mode and send quotes */
	@Field(10) 
	public ConManager market_watch(int market_watch) {
		this.io.setIntField(this, 10, market_watch);
		return this;
	}
	/** right to send internal mail */
	@Field(11) 
	public int email() {
		return this.io.getIntField(this, 11);
	}
	/** right to send internal mail */
	@Field(11) 
	public ConManager email(int email) {
		this.io.setIntField(this, 11, email);
		return this;
	}
	/** right to see clients private data-name,country,address,phone,email etc. */
	@Field(12) 
	public int user_details() {
		return this.io.getIntField(this, 12);
	}
	/** right to see clients private data-name,country,address,phone,email etc. */
	@Field(12) 
	public ConManager user_details(int user_details) {
		this.io.setIntField(this, 12, user_details);
		return this;
	}
	/** right to see trades */
	@Field(13) 
	public int see_trades() {
		return this.io.getIntField(this, 13);
	}
	/** right to see trades */
	@Field(13) 
	public ConManager see_trades(int see_trades) {
		this.io.setIntField(this, 13, see_trades);
		return this;
	}
	/** right to send news */
	@Field(14) 
	public int news() {
		return this.io.getIntField(this, 14);
	}
	/** right to send news */
	@Field(14) 
	public ConManager news(int news) {
		this.io.setIntField(this, 14, news);
		return this;
	}
	/** right to configure plugins */
	@Field(15) 
	public int plugins() {
		return this.io.getIntField(this, 15);
	}
	/** right to configure plugins */
	@Field(15) 
	public ConManager plugins(int plugins) {
		this.io.setIntField(this, 15, plugins);
		return this;
	}
	/** right to receive server reports */
	@Field(16) 
	public int server_reports() {
		return this.io.getIntField(this, 16);
	}
	/** right to receive server reports */
	@Field(16) 
	public ConManager server_reports(int server_reports) {
		this.io.setIntField(this, 16, server_reports);
		return this;
	}
	/** right to access to technical support page */
	@Field(17) 
	public int techsupport() {
		return this.io.getIntField(this, 17);
	}
	/** right to access to technical support page */
	@Field(17) 
	public ConManager techsupport(int techsupport) {
		this.io.setIntField(this, 17, techsupport);
		return this;
	}
	/** right to access server applications market */
	@Field(18) 
	public int market() {
		return this.io.getIntField(this, 18);
	}
	/** right to access server applications market */
	@Field(18) 
	public ConManager market(int market) {
		this.io.setIntField(this, 18, market);
		return this;
	}
	/** right to push notifications */
	@Field(19) 
	public int notifications() {
		return this.io.getIntField(this, 19);
	}
	/** right to push notifications */
	@Field(19) 
	public ConManager notifications(int notifications) {
		this.io.setIntField(this, 19, notifications);
		return this;
	}
	/** C type : int[9] */
	@Array({9}) 
	@Field(20) 
	public Pointer<Integer > unused() {
		return this.io.getPointerField(this, 20);
	}
	/** enable IP control */
	@Field(21) 
	public int ipfilter() {
		return this.io.getIntField(this, 21);
	}
	/** enable IP control */
	@Field(21) 
	public ConManager ipfilter(int ipfilter) {
		this.io.setIntField(this, 21, ipfilter);
		return this;
	}
	/** range of allowed IPs */
	@CLong 
	@Field(22) 
	public long ip_from() {
		return this.io.getCLongField(this, 22);
	}
	/** range of allowed IPs */
	@CLong 
	@Field(22) 
	public ConManager ip_from(long ip_from) {
		this.io.setCLongField(this, 22, ip_from);
		return this;
	}
	/** range of allowed IPs */
	@CLong 
	@Field(23) 
	public long ip_to() {
		return this.io.getCLongField(this, 23);
	}
	/** range of allowed IPs */
	@CLong 
	@Field(23) 
	public ConManager ip_to(long ip_to) {
		this.io.setCLongField(this, 23, ip_to);
		return this;
	}
	/**
	 * name of mailbox for internal mail<br>
	 * C type : char[64]
	 */
	@Array({64}) 
	@Field(24) 
	public Pointer<Byte > mailbox() {
		return this.io.getPointerField(this, 24);
	}
	/**
	 * comma separated list of managed groups (allowed '*' wildcard)<br>
	 * C type : char[1024]
	 */
	@Array({1024}) 
	@Field(25) 
	public Pointer<Byte > groups() {
		return this.io.getPointerField(this, 25);
	}
	/**
	 * manager rights for security groups<br>
	 * C type : ConManagerSec[(32)]
	 */
	@Array({32}) 
	@Field(26) 
	public Pointer<ConManagerSec > secgroups() {
		return this.io.getPointerField(this, 26);
	}
	/** internal data */
	@Field(27) 
	public int exp_time() {
		return this.io.getIntField(this, 27);
	}
	/** internal data */
	@Field(27) 
	public ConManager exp_time(int exp_time) {
		this.io.setIntField(this, 27, exp_time);
		return this;
	}
	/**
	 * manager name (read only)<br>
	 * C type : char[32]
	 */
	@Array({32}) 
	@Field(28) 
	public Pointer<Byte > name() {
		return this.io.getPointerField(this, 28);
	}
	/** maximum available data (in days) */
	@Field(29) 
	public int info_depth() {
		return this.io.getIntField(this, 29);
	}
	/** maximum available data (in days) */
	@Field(29) 
	public ConManager info_depth(int info_depth) {
		this.io.setIntField(this, 29, info_depth);
		return this;
	}
	/** C type : int[22] */
	@Array({22}) 
	@Field(30) 
	public Pointer<Integer > reserved() {
		return this.io.getPointerField(this, 30);
	}
	public ConManager() {
		super();
	}
	public ConManager(Pointer pointer) {
		super(pointer);
	}
}
