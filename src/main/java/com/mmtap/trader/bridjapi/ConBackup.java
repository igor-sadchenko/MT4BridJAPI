package com.mmtap.trader.bridjapi;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.TimeT;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:169</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("MT4ManagerAPI") 
public class ConBackup extends StructObject {
	static {
		BridJ.register();
	}
	/**
	 * path to backup<br>
	 * C type : char[256]
	 */
	@Array({256}) 
	@Field(0) 
	public Pointer<Byte > fullbackup_path() {
		return this.io.getPointerField(this, 0);
	}
	/** full backup's period-BACKUP_1HOUR, BACKUP_4HOURS, BACKUP_1DAY */
	@Field(1) 
	public int fullbackup_period() {
		return this.io.getIntField(this, 1);
	}
	/** full backup's period-BACKUP_1HOUR, BACKUP_4HOURS, BACKUP_1DAY */
	@Field(1) 
	public ConBackup fullbackup_period(int fullbackup_period) {
		this.io.setIntField(this, 1, fullbackup_period);
		return this;
	}
	/** full backup's store time-BU_STORE_1MONTH, BU_STORE_3MONTHS, BU_STORE_6MONTHS,BU_STORE_1YEAR */
	@Field(2) 
	public int fullbackup_store() {
		return this.io.getIntField(this, 2);
	}
	/** full backup's store time-BU_STORE_1MONTH, BU_STORE_3MONTHS, BU_STORE_6MONTHS,BU_STORE_1YEAR */
	@Field(2) 
	public ConBackup fullbackup_store(int fullbackup_store) {
		this.io.setIntField(this, 2, fullbackup_store);
		return this;
	}
	/** full backup's last execution time */
	@Field(3) 
	public TimeT fullbackup_lasttime() {
		return this.io.getTimeTField(this, 3);
	}
	/** full backup's last execution time */
	@Field(3) 
	public ConBackup fullbackup_lasttime(TimeT fullbackup_lasttime) {
		this.io.setTimeTField(this, 3, fullbackup_lasttime);
		return this;
	}
	/** full backup timeshift (minutes) */
	@Field(4) 
	public short fullbackup_shift() {
		return this.io.getShortField(this, 4);
	}
	/** full backup timeshift (minutes) */
	@Field(4) 
	public ConBackup fullbackup_shift(short fullbackup_shift) {
		this.io.setShortField(this, 4, fullbackup_shift);
		return this;
	}
	/**
	 * path to external processing directory<br>
	 * C type : char[256]
	 */
	@Array({256}) 
	@Field(5) 
	public Pointer<Byte > external_path() {
		return this.io.getPointerField(this, 5);
	}
	/** period of archive backup-ARC_BACKUP_5MIN, ARC_BACKUP_15MIN, ARC_BACKUP_30MIN, ARC_BACKUP_1HOUR */
	@Field(6) 
	public int archive_period() {
		return this.io.getIntField(this, 6);
	}
	/** period of archive backup-ARC_BACKUP_5MIN, ARC_BACKUP_15MIN, ARC_BACKUP_30MIN, ARC_BACKUP_1HOUR */
	@Field(6) 
	public ConBackup archive_period(int archive_period) {
		this.io.setIntField(this, 6, archive_period);
		return this;
	}
	/** archive backup's store time-ARC_STORE_1WEEK, ARC_STORE_2WEEKS, ARC_STORE_1MONTH, ARC_STORE_3MONTH, ARC_STORE_6MONTH */
	@Field(7) 
	public int archive_store() {
		return this.io.getIntField(this, 7);
	}
	/** archive backup's store time-ARC_STORE_1WEEK, ARC_STORE_2WEEKS, ARC_STORE_1MONTH, ARC_STORE_3MONTH, ARC_STORE_6MONTH */
	@Field(7) 
	public ConBackup archive_store(int archive_store) {
		this.io.setIntField(this, 7, archive_store);
		return this;
	}
	/** archive backup's last execution time */
	@Field(8) 
	public TimeT archive_lasttime() {
		return this.io.getTimeTField(this, 8);
	}
	/** archive backup's last execution time */
	@Field(8) 
	public ConBackup archive_lasttime(TimeT archive_lasttime) {
		this.io.setTimeTField(this, 8, archive_lasttime);
		return this;
	}
	/**
	 * comma separated list of exported securities<br>
	 * C type : char[512]
	 */
	@Array({512}) 
	@Field(9) 
	public Pointer<Byte > export_securities() {
		return this.io.getPointerField(this, 9);
	}
	/**
	 * path to export script<br>
	 * C type : char[256]
	 */
	@Array({256}) 
	@Field(10) 
	public Pointer<Byte > export_path() {
		return this.io.getPointerField(this, 10);
	}
	/** export period-enumeration EXPORT_1MIN, EXPORT_5MIN, EXPORT_15MIN, EXPORT_30MIN,EXPORT_1HOUR */
	@Field(11) 
	public int export_period() {
		return this.io.getIntField(this, 11);
	}
	/** export period-enumeration EXPORT_1MIN, EXPORT_5MIN, EXPORT_15MIN, EXPORT_30MIN,EXPORT_1HOUR */
	@Field(11) 
	public ConBackup export_period(int export_period) {
		this.io.setIntField(this, 11, export_period);
		return this;
	}
	/** export's last execution time */
	@Field(12) 
	public TimeT export_lasttime() {
		return this.io.getTimeTField(this, 12);
	}
	/** export's last execution time */
	@Field(12) 
	public ConBackup export_lasttime(TimeT export_lasttime) {
		this.io.setTimeTField(this, 12, export_lasttime);
		return this;
	}
	/** server role { WATCH_STAND_ALONE, WATCH_MASTER, WATCH_SLAVE } */
	@Field(13) 
	public int watch_role() {
		return this.io.getIntField(this, 13);
	}
	/** server role { WATCH_STAND_ALONE, WATCH_MASTER, WATCH_SLAVE } */
	@Field(13) 
	public ConBackup watch_role(int watch_role) {
		this.io.setIntField(this, 13, watch_role);
		return this;
	}
	/**
	 * slave server password<br>
	 * C type : char[16]
	 */
	@Array({16}) 
	@Field(14) 
	public Pointer<Byte > watch_password() {
		return this.io.getPointerField(this, 14);
	}
	/**
	 * opposite server IP address and port<br>
	 * C type : char[24]
	 */
	@Array({24}) 
	@Field(15) 
	public Pointer<Byte > watch_opposite() {
		return this.io.getPointerField(this, 15);
	}
	/** opposite server IP */
	@Field(16) 
	public int watch_ip() {
		return this.io.getIntField(this, 16);
	}
	/** opposite server IP */
	@Field(16) 
	public ConBackup watch_ip(int watch_ip) {
		this.io.setIntField(this, 16, watch_ip);
		return this;
	}
	/** shift of archive backup time (in minutes) */
	@Field(17) 
	public byte archive_shift() {
		return this.io.getByteField(this, 17);
	}
	/** shift of archive backup time (in minutes) */
	@Field(17) 
	public ConBackup archive_shift(byte archive_shift) {
		this.io.setByteField(this, 17, archive_shift);
		return this;
	}
	/** watch dog state */
	@Field(18) 
	public byte watch_state() {
		return this.io.getByteField(this, 18);
	}
	/** watch dog state */
	@Field(18) 
	public ConBackup watch_state(byte watch_state) {
		this.io.setByteField(this, 18, watch_state);
		return this;
	}
	/** watch dog failover mode */
	@Field(19) 
	public byte watch_failover() {
		return this.io.getByteField(this, 19);
	}
	/** watch dog failover mode */
	@Field(19) 
	public ConBackup watch_failover(byte watch_failover) {
		this.io.setByteField(this, 19, watch_failover);
		return this;
	}
	/** watch dog timeout */
	@Field(20) 
	public byte watch_timeout() {
		return this.io.getByteField(this, 20);
	}
	/** watch dog timeout */
	@Field(20) 
	public ConBackup watch_timeout(byte watch_timeout) {
		this.io.setByteField(this, 20, watch_timeout);
		return this;
	}
	/** watch dog login */
	@Field(21) 
	public int watch_login() {
		return this.io.getIntField(this, 21);
	}
	/** watch dog login */
	@Field(21) 
	public ConBackup watch_login(int watch_login) {
		this.io.setIntField(this, 21, watch_login);
		return this;
	}
	/** watch dog timestamp */
	@Field(22) 
	public TimeT watch_timestamp() {
		return this.io.getTimeTField(this, 22);
	}
	/** watch dog timestamp */
	@Field(22) 
	public ConBackup watch_timestamp(TimeT watch_timestamp) {
		this.io.setTimeTField(this, 22, watch_timestamp);
		return this;
	}
	public ConBackup() {
		super();
	}
	public ConBackup(Pointer pointer) {
		super(pointer);
	}
}
