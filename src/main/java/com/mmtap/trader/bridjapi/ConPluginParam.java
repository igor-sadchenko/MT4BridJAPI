package com.mmtap.trader.bridjapi;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * --- plugin with parameters<br>
 * <i>native declaration : MT4ManagerAPI.h:660</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("MT4ManagerAPI") 
public class ConPluginParam extends StructObject {
	static {
		BridJ.register();
	}
	/**
	 * plugin configuration<br>
	 * C type : ConPlugin
	 */
	@Field(0) 
	public ConPlugin plugin() {
		return this.io.getNativeObjectField(this, 0);
	}
	/**
	 * plugin configuration<br>
	 * C type : ConPlugin
	 */
	@Field(0) 
	public ConPluginParam plugin(ConPlugin plugin) {
		this.io.setNativeObjectField(this, 0, plugin);
		return this;
	}
	/**
	 * plugin parameters<br>
	 * C type : PluginCfg*
	 */
	@Field(1) 
	public Pointer<PluginCfg > params() {
		return this.io.getPointerField(this, 1);
	}
	/**
	 * plugin parameters<br>
	 * C type : PluginCfg*
	 */
	@Field(1) 
	public ConPluginParam params(Pointer<PluginCfg > params) {
		this.io.setPointerField(this, 1, params);
		return this;
	}
	/** total plugin parameters */
	@Field(2) 
	public int total() {
		return this.io.getIntField(this, 2);
	}
	/** total plugin parameters */
	@Field(2) 
	public ConPluginParam total(int total) {
		this.io.setIntField(this, 2, total);
		return this;
	}
	public ConPluginParam() {
		super();
	}
	public ConPluginParam(Pointer pointer) {
		super(pointer);
	}
}
