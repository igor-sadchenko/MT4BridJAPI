package com.mmtap.trader.bridjapi;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:690</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("MT4ManagerAPI") 
public class ConGatewayMarkup extends StructObject {
	static {
		BridJ.register();
	}
	/** enable flag 0 - disabled, 1 - enabled */
	@Field(0) 
	public int enable() {
		return this.io.getIntField(this, 0);
	}
	/** enable flag 0 - disabled, 1 - enabled */
	@Field(0) 
	public ConGatewayMarkup enable(int enable) {
		this.io.setIntField(this, 0, enable);
		return this;
	}
	/**
	 * source symbol\symbols mask\symbols group name<br>
	 * C type : char[128]
	 */
	@Array({128}) 
	@Field(1) 
	public Pointer<Byte > source() {
		return this.io.getPointerField(this, 1);
	}
	/**
	 * local symbol name<br>
	 * C type : char[12]
	 */
	@Array({12}) 
	@Field(2) 
	public Pointer<Byte > symbol() {
		return this.io.getPointerField(this, 2);
	}
	/**
	 * account name (obsolete)<br>
	 * C type : char[64]
	 */
	@Array({64}) 
	@Field(3) 
	public Pointer<Byte > account_name() {
		return this.io.getPointerField(this, 3);
	}
	/** account internal id (obsolete) */
	@Field(4) 
	public int account_id() {
		return this.io.getIntField(this, 4);
	}
	/** account internal id (obsolete) */
	@Field(4) 
	public ConGatewayMarkup account_id(int account_id) {
		this.io.setIntField(this, 4, account_id);
		return this;
	}
	/** bid markup in pips */
	@Field(5) 
	public int bid_markup() {
		return this.io.getIntField(this, 5);
	}
	/** bid markup in pips */
	@Field(5) 
	public ConGatewayMarkup bid_markup(int bid_markup) {
		this.io.setIntField(this, 5, bid_markup);
		return this;
	}
	/** ask markup in pips */
	@Field(6) 
	public int ask_markup() {
		return this.io.getIntField(this, 6);
	}
	/** ask markup in pips */
	@Field(6) 
	public ConGatewayMarkup ask_markup(int ask_markup) {
		this.io.setIntField(this, 6, ask_markup);
		return this;
	}
	/**
	 * reserved<br>
	 * C type : int[16]
	 */
	@Array({16}) 
	@Field(7) 
	public Pointer<Integer > reserved() {
		return this.io.getPointerField(this, 7);
	}
	public ConGatewayMarkup() {
		super();
	}
	public ConGatewayMarkup(Pointer pointer) {
		super(pointer);
	}
}
