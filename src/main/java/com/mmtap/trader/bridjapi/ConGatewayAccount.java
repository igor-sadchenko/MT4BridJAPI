package com.mmtap.trader.bridjapi;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:672</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("MT4ManagerAPI") 
public class ConGatewayAccount extends StructObject {
	static {
		BridJ.register();
	}
	/** enable flag 0 - disabled, 1 - enabled */
	@Field(0) 
	public int enable() {
		return this.io.getIntField(this, 0);
	}
	/** enable flag 0 - disabled, 1 - enabled */
	@Field(0) 
	public ConGatewayAccount enable(int enable) {
		this.io.setIntField(this, 0, enable);
		return this;
	}
	/**
	 * public name<br>
	 * C type : char[64]
	 */
	@Array({64}) 
	@Field(1) 
	public Pointer<Byte > name() {
		return this.io.getPointerField(this, 1);
	}
	/** internal id */
	@Field(2) 
	public int id() {
		return this.io.getIntField(this, 2);
	}
	/** internal id */
	@Field(2) 
	public ConGatewayAccount id(int id) {
		this.io.setIntField(this, 2, id);
		return this;
	}
	/** type (obsolete) */
	@Field(3) 
	public int type() {
		return this.io.getIntField(this, 3);
	}
	/** type (obsolete) */
	@Field(3) 
	public ConGatewayAccount type(int type) {
		this.io.setIntField(this, 3, type);
		return this;
	}
	/** STP MT4 login */
	@Field(4) 
	public int login() {
		return this.io.getIntField(this, 4);
	}
	/** STP MT4 login */
	@Field(4) 
	public ConGatewayAccount login(int login) {
		this.io.setIntField(this, 4, login);
		return this;
	}
	/**
	 * MT4 server address<br>
	 * C type : char[64]
	 */
	@Array({64}) 
	@Field(5) 
	public Pointer<Byte > address() {
		return this.io.getPointerField(this, 5);
	}
	/**
	 * STP MT4 password<br>
	 * C type : char[64]
	 */
	@Array({64}) 
	@Field(6) 
	public Pointer<Byte > password() {
		return this.io.getPointerField(this, 6);
	}
	/**
	 * list of logins for internal email notification<br>
	 * C type : int[8]
	 */
	@Array({8}) 
	@Field(7) 
	public Pointer<Integer > notify_logins() {
		return this.io.getPointerField(this, 7);
	}
	/** flag fields */
	@Field(8) 
	public int flags() {
		return this.io.getIntField(this, 8);
	}
	/** flag fields */
	@Field(8) 
	public ConGatewayAccount flags(int flags) {
		this.io.setIntField(this, 8, flags);
		return this;
	}
	/**
	 * reserved<br>
	 * C type : int[23]
	 */
	@Array({23}) 
	@Field(9) 
	public Pointer<Integer > reserved() {
		return this.io.getPointerField(this, 9);
	}
	public ConGatewayAccount() {
		super();
	}
	public ConGatewayAccount(Pointer pointer) {
		super(pointer);
	}
}
