package com.mmtap.trader.bridjapi;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * ---<br>
 * <i>native declaration : MT4ManagerAPI.h:246</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("MT4ManagerAPI") 
public class ConGroupSec extends StructObject {
	static {
		BridJ.register();
	}
	/** enable show and trade for this group of securites */
	@Field(0) 
	public int show() {
		return this.io.getIntField(this, 0);
	}
	/** enable show and trade for this group of securites */
	@Field(0) 
	public ConGroupSec show(int show) {
		this.io.setIntField(this, 0, show);
		return this;
	}
	/** enable show and trade for this group of securites */
	@Field(1) 
	public int trade() {
		return this.io.getIntField(this, 1);
	}
	/** enable show and trade for this group of securites */
	@Field(1) 
	public ConGroupSec trade(int trade) {
		this.io.setIntField(this, 1, trade);
		return this;
	}
	/** dealing mode-EXECUTION_MANUAL,EXECUTION_AUTO,EXECUTION_ACTIVITY */
	@Field(2) 
	public int execution() {
		return this.io.getIntField(this, 2);
	}
	/** dealing mode-EXECUTION_MANUAL,EXECUTION_AUTO,EXECUTION_ACTIVITY */
	@Field(2) 
	public ConGroupSec execution(int execution) {
		this.io.setIntField(this, 2, execution);
		return this;
	}
	/** standart commission */
	@Field(3) 
	public double comm_base() {
		return this.io.getDoubleField(this, 3);
	}
	/** standart commission */
	@Field(3) 
	public ConGroupSec comm_base(double comm_base) {
		this.io.setDoubleField(this, 3, comm_base);
		return this;
	}
	/** commission type-COMM_TYPE_MONEY,COMM_TYPE_PIPS,COMM_TYPE_PERCENT */
	@Field(4) 
	public int comm_type() {
		return this.io.getIntField(this, 4);
	}
	/** commission type-COMM_TYPE_MONEY,COMM_TYPE_PIPS,COMM_TYPE_PERCENT */
	@Field(4) 
	public ConGroupSec comm_type(int comm_type) {
		this.io.setIntField(this, 4, comm_type);
		return this;
	}
	/** commission lots mode-COMMISSION_PER_LOT,COMMISSION_PER_DEAL */
	@Field(5) 
	public int comm_lots() {
		return this.io.getIntField(this, 5);
	}
	/** commission lots mode-COMMISSION_PER_LOT,COMMISSION_PER_DEAL */
	@Field(5) 
	public ConGroupSec comm_lots(int comm_lots) {
		this.io.setIntField(this, 5, comm_lots);
		return this;
	}
	/** agent commission */
	@Field(6) 
	public double comm_agent() {
		return this.io.getDoubleField(this, 6);
	}
	/** agent commission */
	@Field(6) 
	public ConGroupSec comm_agent(double comm_agent) {
		this.io.setDoubleField(this, 6, comm_agent);
		return this;
	}
	/** agent commission mode-COMM_TYPE_MONEY, COMM_TYPE_PIPS */
	@Field(7) 
	public int comm_agent_type() {
		return this.io.getIntField(this, 7);
	}
	/** agent commission mode-COMM_TYPE_MONEY, COMM_TYPE_PIPS */
	@Field(7) 
	public ConGroupSec comm_agent_type(int comm_agent_type) {
		this.io.setIntField(this, 7, comm_agent_type);
		return this;
	}
	/** spread difference in compare with default security spread */
	@Field(8) 
	public int spread_diff() {
		return this.io.getIntField(this, 8);
	}
	/** spread difference in compare with default security spread */
	@Field(8) 
	public ConGroupSec spread_diff(int spread_diff) {
		this.io.setIntField(this, 8, spread_diff);
		return this;
	}
	/** allowed minimal and maximal lot values */
	@Field(9) 
	public int lot_min() {
		return this.io.getIntField(this, 9);
	}
	/** allowed minimal and maximal lot values */
	@Field(9) 
	public ConGroupSec lot_min(int lot_min) {
		this.io.setIntField(this, 9, lot_min);
		return this;
	}
	/** allowed minimal and maximal lot values */
	@Field(10) 
	public int lot_max() {
		return this.io.getIntField(this, 10);
	}
	/** allowed minimal and maximal lot values */
	@Field(10) 
	public ConGroupSec lot_max(int lot_max) {
		this.io.setIntField(this, 10, lot_max);
		return this;
	}
	/** allowed step value (10 lot-1000, 1 lot-100, 0.1 lot-10) */
	@Field(11) 
	public int lot_step() {
		return this.io.getIntField(this, 11);
	}
	/** allowed step value (10 lot-1000, 1 lot-100, 0.1 lot-10) */
	@Field(11) 
	public ConGroupSec lot_step(int lot_step) {
		this.io.setIntField(this, 11, lot_step);
		return this;
	}
	/** maximum price deviation in Instant Execution mode */
	@Field(12) 
	public int ie_deviation() {
		return this.io.getIntField(this, 12);
	}
	/** maximum price deviation in Instant Execution mode */
	@Field(12) 
	public ConGroupSec ie_deviation(int ie_deviation) {
		this.io.setIntField(this, 12, ie_deviation);
		return this;
	}
	/** use confirmation in Request mode */
	@Field(13) 
	public int confirmation() {
		return this.io.getIntField(this, 13);
	}
	/** use confirmation in Request mode */
	@Field(13) 
	public ConGroupSec confirmation(int confirmation) {
		this.io.setIntField(this, 13, confirmation);
		return this;
	}
	/** clients trade rights-bit mask see TRADE_DENY_NONE,TRADE_DENY_CLOSEBY,TRADE_DENY_MUCLOSEBY */
	@Field(14) 
	public int trade_rights() {
		return this.io.getIntField(this, 14);
	}
	/** clients trade rights-bit mask see TRADE_DENY_NONE,TRADE_DENY_CLOSEBY,TRADE_DENY_MUCLOSEBY */
	@Field(14) 
	public ConGroupSec trade_rights(int trade_rights) {
		this.io.setIntField(this, 14, trade_rights);
		return this;
	}
	/** do not resend request to the dealer when client uses deviation */
	@Field(15) 
	public int ie_quick_mode() {
		return this.io.getIntField(this, 15);
	}
	/** do not resend request to the dealer when client uses deviation */
	@Field(15) 
	public ConGroupSec ie_quick_mode(int ie_quick_mode) {
		this.io.setIntField(this, 15, ie_quick_mode);
		return this;
	}
	/** auto close-out method { CLOSE_OUT_NONE, CLOSE_OUT_HIHI, CLOSE_OUT_LOLO, CLOSE_OUT_HILO, CLOSE_OUT_LOHI, CLOSE_OUT_LOHI, CLOSE_OUT_FIFO, CLOSE_OUT_LIFO, CLOSE_OUT_INTRDAY_FIFO } */
	@Field(16) 
	public int autocloseout_mode() {
		return this.io.getIntField(this, 16);
	}
	/** auto close-out method { CLOSE_OUT_NONE, CLOSE_OUT_HIHI, CLOSE_OUT_LOLO, CLOSE_OUT_HILO, CLOSE_OUT_LOHI, CLOSE_OUT_LOHI, CLOSE_OUT_FIFO, CLOSE_OUT_LIFO, CLOSE_OUT_INTRDAY_FIFO } */
	@Field(16) 
	public ConGroupSec autocloseout_mode(int autocloseout_mode) {
		this.io.setIntField(this, 16, autocloseout_mode);
		return this;
	}
	/** commission taxes */
	@Field(17) 
	public double comm_tax() {
		return this.io.getDoubleField(this, 17);
	}
	/** commission taxes */
	@Field(17) 
	public ConGroupSec comm_tax(double comm_tax) {
		this.io.setDoubleField(this, 17, comm_tax);
		return this;
	}
	/** agent commission per lot/per deal { COMMISSION_PER_LOT,COMMISSION_PER_DEAL } */
	@Field(18) 
	public int comm_agent_lots() {
		return this.io.getIntField(this, 18);
	}
	/** agent commission per lot/per deal { COMMISSION_PER_LOT,COMMISSION_PER_DEAL } */
	@Field(18) 
	public ConGroupSec comm_agent_lots(int comm_agent_lots) {
		this.io.setIntField(this, 18, comm_agent_lots);
		return this;
	}
	/** "soft" margin check */
	@Field(19) 
	public int freemargin_mode() {
		return this.io.getIntField(this, 19);
	}
	/** "soft" margin check */
	@Field(19) 
	public ConGroupSec freemargin_mode(int freemargin_mode) {
		this.io.setIntField(this, 19, freemargin_mode);
		return this;
	}
	/**
	 * reserved<br>
	 * C type : int[3]
	 */
	@Array({3}) 
	@Field(20) 
	public Pointer<Integer > reserved() {
		return this.io.getPointerField(this, 20);
	}
	public ConGroupSec() {
		super();
	}
	public ConGroupSec(Pointer pointer) {
		super(pointer);
	}
}
