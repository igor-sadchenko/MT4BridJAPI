package com.mmtap.trader.bridjapi;
import com.mmtap.trader.bridjapi.MT4ManagerAPILibrary.HWND;
import com.mmtap.trader.bridjapi.MT4ManagerAPILibrary.LPCSTR;
import com.mmtap.trader.bridjapi.MT4ManagerAPILibrary.LPCWSTR;
import com.mmtap.trader.bridjapi.MT4ManagerAPILibrary.LPSTR;
import com.mmtap.trader.bridjapi.MT4ManagerAPILibrary.LPVOID;
import com.mmtap.trader.bridjapi.MT4ManagerAPILibrary.LPWSTR;
import com.mmtap.trader.bridjapi.MT4ManagerAPILibrary.MTAPI_NOTIFY_FUNC;
import com.mmtap.trader.bridjapi.MT4ManagerAPILibrary.MTAPI_NOTIFY_FUNC_EX;
import com.mmtap.trader.bridjapi.MT4ManagerAPILibrary.REFIID;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.TimeT;
import org.bridj.ann.Convention.Style;
import org.bridj.ann.Convention;
import org.bridj.ann.Library;
import org.bridj.ann.Name;
import org.bridj.ann.Ptr;
import org.bridj.ann.Virtual;
import org.bridj.cpp.CPPObject;
/**
 * +------------------------------------------------------------------+<br>
 * <i>native declaration : MT4ManagerAPI.h:1507</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("MT4ManagerAPI") 
public class CManagerInterface extends CPPObject {
	static {
		BridJ.register();
	}
	/**
	 * --- dummy methods for delphi<br>
	 * Original signature : <code>int QueryInterface(REFIID, LPVOID*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1511</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(0) 
	public int QueryInterface(REFIID riid, Pointer<LPVOID > obj) {
		return QueryInterface(Pointer.getPeer(riid), Pointer.getPeer(obj));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(0) 
	protected native int QueryInterface(@Ptr long riid, @Ptr long obj);
	/**
	 * Original signature : <code>int AddRef()</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1512</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(1) 
	public native int AddRef();
	/**
	 * --- release<br>
	 * Original signature : <code>int Release()</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1514</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(2) 
	public native int Release();
	/**
	 * --- service methods<br>
	 * Original signature : <code>void MemFree(void*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1516</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(3) 
	public void MemFree(Pointer<? > ptr) {
		MemFree(Pointer.getPeer(ptr));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(3) 
	protected native void MemFree(@Ptr long ptr);
	/**
	 * Original signature : <code>LPCSTR ErrorDescription(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1517</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(4) 
	public LPCSTR ErrorDescription(int code) {
		return Pointer.pointerToAddress(ErrorDescription$2(code));
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Name("ErrorDescription") 
	@Virtual(4) 
	protected native long ErrorDescription$2(int code);
	/**
	 * Original signature : <code>void WorkingDirectory(LPCSTR)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1518</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(5) 
	public void WorkingDirectory(LPCSTR path) {
		WorkingDirectory(Pointer.getPeer(path));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(5) 
	protected native void WorkingDirectory(@Ptr long path);
	/**
	 * --- connection<br>
	 * Original signature : <code>int Connect(LPCSTR)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1520</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(6) 
	public int Connect(LPCSTR server) {
		return Connect(Pointer.getPeer(server));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(6) 
	protected native int Connect(@Ptr long server);
	/**
	 * Original signature : <code>int Disconnect()</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1521</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(7) 
	public native int Disconnect();
	/**
	 * Original signature : <code>int IsConnected()</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1522</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(8) 
	public native int IsConnected();
	/**
	 * Original signature : <code>int Login(const int, LPCSTR)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1523</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(9) 
	public int Login(int login, LPCSTR password) {
		return Login(login, Pointer.getPeer(password));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(9) 
	protected native int Login(int login, @Ptr long password);
	/**
	 * Original signature : <code>int LoginSecured(LPCSTR)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1524</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(10) 
	public int LoginSecured(LPCSTR key_path) {
		return LoginSecured(Pointer.getPeer(key_path));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(10) 
	protected native int LoginSecured(@Ptr long key_path);
	/**
	 * Original signature : <code>int KeysSend(LPCSTR)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1525</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(11) 
	public int KeysSend(LPCSTR key_path) {
		return KeysSend(Pointer.getPeer(key_path));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(11) 
	protected native int KeysSend(@Ptr long key_path);
	/**
	 * Original signature : <code>int Ping()</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1526</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(12) 
	public native int Ping();
	/**
	 * Original signature : <code>int PasswordChange(LPCSTR, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1527</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(13) 
	public int PasswordChange(LPCSTR pass, int is_investor) {
		return PasswordChange(Pointer.getPeer(pass), is_investor);
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(13) 
	protected native int PasswordChange(@Ptr long pass, int is_investor);
	/**
	 * Original signature : <code>int ManagerRights(ConManager*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1528</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(14) 
	public int ManagerRights(Pointer<ConManager > man) {
		return ManagerRights(Pointer.getPeer(man));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(14) 
	protected native int ManagerRights(@Ptr long man);
	/**
	 * --- server administration commands<br>
	 * Original signature : <code>int SrvRestart()</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1530</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(15) 
	public native int SrvRestart();
	/**
	 * Original signature : <code>int SrvChartsSync()</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1531</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(16) 
	public native int SrvChartsSync();
	/**
	 * Original signature : <code>int SrvLiveUpdateStart()</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1532</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(17) 
	public native int SrvLiveUpdateStart();
	/**
	 * Original signature : <code>int SrvFeedsRestart()</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1533</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(18) 
	public native int SrvFeedsRestart();
	/**
	 * Original signature : <code>int CfgRequestCommon(ConCommon*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1536</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(19) 
	public int CfgRequestCommon(Pointer<ConCommon > cfg) {
		return CfgRequestCommon(Pointer.getPeer(cfg));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(19) 
	protected native int CfgRequestCommon(@Ptr long cfg);
	/**
	 * Original signature : <code>int CfgRequestTime(ConTime*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1537</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(20) 
	public int CfgRequestTime(Pointer<ConTime > cfg) {
		return CfgRequestTime(Pointer.getPeer(cfg));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(20) 
	protected native int CfgRequestTime(@Ptr long cfg);
	/**
	 * Original signature : <code>int CfgRequestBackup(ConBackup*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1538</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(21) 
	public int CfgRequestBackup(Pointer<ConBackup > cfg) {
		return CfgRequestBackup(Pointer.getPeer(cfg));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(21) 
	protected native int CfgRequestBackup(@Ptr long cfg);
	/**
	 * Original signature : <code>int CfgRequestSymbolGroup(ConSymbolGroup*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1539</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(22) 
	public int CfgRequestSymbolGroup(Pointer<ConSymbolGroup > cfg) {
		return CfgRequestSymbolGroup(Pointer.getPeer(cfg));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(22) 
	protected native int CfgRequestSymbolGroup(@Ptr long cfg);
	/**
	 * Original signature : <code>ConAccess* CfgRequestAccess(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1540</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(23) 
	public Pointer<ConAccess > CfgRequestAccess(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(CfgRequestAccess(Pointer.getPeer(total)), ConAccess.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(23) 
	protected native long CfgRequestAccess(@Ptr long total);
	/**
	 * Original signature : <code>ConDataServer* CfgRequestDataServer(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1541</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(24) 
	public Pointer<ConDataServer > CfgRequestDataServer(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(CfgRequestDataServer(Pointer.getPeer(total)), ConDataServer.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(24) 
	protected native long CfgRequestDataServer(@Ptr long total);
	/**
	 * Original signature : <code>ConHoliday* CfgRequestHoliday(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1542</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(25) 
	public Pointer<ConHoliday > CfgRequestHoliday(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(CfgRequestHoliday(Pointer.getPeer(total)), ConHoliday.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(25) 
	protected native long CfgRequestHoliday(@Ptr long total);
	/**
	 * Original signature : <code>ConSymbol* CfgRequestSymbol(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1543</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(26) 
	public Pointer<ConSymbol > CfgRequestSymbol(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(CfgRequestSymbol(Pointer.getPeer(total)), ConSymbol.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(26) 
	protected native long CfgRequestSymbol(@Ptr long total);
	/**
	 * Original signature : <code>ConGroup* CfgRequestGroup(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1544</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(27) 
	public Pointer<ConGroup > CfgRequestGroup(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(CfgRequestGroup(Pointer.getPeer(total)), ConGroup.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(27) 
	protected native long CfgRequestGroup(@Ptr long total);
	/**
	 * Original signature : <code>ConManager* CfgRequestManager(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1545</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(28) 
	public Pointer<ConManager > CfgRequestManager(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(CfgRequestManager(Pointer.getPeer(total)), ConManager.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(28) 
	protected native long CfgRequestManager(@Ptr long total);
	/**
	 * Original signature : <code>ConFeeder* CfgRequestFeeder(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1546</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(29) 
	public Pointer<ConFeeder > CfgRequestFeeder(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(CfgRequestFeeder(Pointer.getPeer(total)), ConFeeder.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(29) 
	protected native long CfgRequestFeeder(@Ptr long total);
	/**
	 * Original signature : <code>ConLiveUpdate* CfgRequestLiveUpdate(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1547</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(30) 
	public Pointer<ConLiveUpdate > CfgRequestLiveUpdate(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(CfgRequestLiveUpdate(Pointer.getPeer(total)), ConLiveUpdate.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(30) 
	protected native long CfgRequestLiveUpdate(@Ptr long total);
	/**
	 * Original signature : <code>ConSync* CfgRequestSync(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1548</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(31) 
	public Pointer<ConSync > CfgRequestSync(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(CfgRequestSync(Pointer.getPeer(total)), ConSync.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(31) 
	protected native long CfgRequestSync(@Ptr long total);
	/**
	 * Original signature : <code>ConPluginParam* CfgRequestPlugin(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1549</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(32) 
	public Pointer<ConPluginParam > CfgRequestPlugin(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(CfgRequestPlugin(Pointer.getPeer(total)), ConPluginParam.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(32) 
	protected native long CfgRequestPlugin(@Ptr long total);
	/**
	 * Original signature : <code>int CfgUpdateCommon(const ConCommon*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1551</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(33) 
	public int CfgUpdateCommon(Pointer<ConCommon > cfg) {
		return CfgUpdateCommon(Pointer.getPeer(cfg));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(33) 
	protected native int CfgUpdateCommon(@Ptr long cfg);
	/**
	 * Original signature : <code>int CfgUpdateAccess(const ConAccess*, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1552</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(34) 
	public int CfgUpdateAccess(Pointer<ConAccess > cfg, int pos) {
		return CfgUpdateAccess(Pointer.getPeer(cfg), pos);
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(34) 
	protected native int CfgUpdateAccess(@Ptr long cfg, int pos);
	/**
	 * Original signature : <code>int CfgUpdateDataServer(const ConDataServer*, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1553</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(35) 
	public int CfgUpdateDataServer(Pointer<ConDataServer > cfg, int pos) {
		return CfgUpdateDataServer(Pointer.getPeer(cfg), pos);
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(35) 
	protected native int CfgUpdateDataServer(@Ptr long cfg, int pos);
	/**
	 * Original signature : <code>int CfgUpdateTime(const ConTime*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1554</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(36) 
	public int CfgUpdateTime(Pointer<ConTime > cfg) {
		return CfgUpdateTime(Pointer.getPeer(cfg));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(36) 
	protected native int CfgUpdateTime(@Ptr long cfg);
	/**
	 * Original signature : <code>int CfgUpdateHoliday(const ConHoliday*, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1555</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(37) 
	public int CfgUpdateHoliday(Pointer<ConHoliday > cfg, int pos) {
		return CfgUpdateHoliday(Pointer.getPeer(cfg), pos);
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(37) 
	protected native int CfgUpdateHoliday(@Ptr long cfg, int pos);
	/**
	 * Original signature : <code>int CfgUpdateSymbol(const ConSymbol*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1556</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(38) 
	public int CfgUpdateSymbol(Pointer<ConSymbol > cfg) {
		return CfgUpdateSymbol(Pointer.getPeer(cfg));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(38) 
	protected native int CfgUpdateSymbol(@Ptr long cfg);
	/**
	 * Original signature : <code>int CfgUpdateSymbolGroup(const ConSymbolGroup*, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1557</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(39) 
	public int CfgUpdateSymbolGroup(Pointer<ConSymbolGroup > cfg, int pos) {
		return CfgUpdateSymbolGroup(Pointer.getPeer(cfg), pos);
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(39) 
	protected native int CfgUpdateSymbolGroup(@Ptr long cfg, int pos);
	/**
	 * Original signature : <code>int CfgUpdateGroup(const ConGroup*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1558</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(40) 
	public int CfgUpdateGroup(Pointer<ConGroup > cfg) {
		return CfgUpdateGroup(Pointer.getPeer(cfg));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(40) 
	protected native int CfgUpdateGroup(@Ptr long cfg);
	/**
	 * Original signature : <code>int CfgUpdateManager(const ConManager*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1559</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(41) 
	public int CfgUpdateManager(Pointer<ConManager > cfg) {
		return CfgUpdateManager(Pointer.getPeer(cfg));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(41) 
	protected native int CfgUpdateManager(@Ptr long cfg);
	/**
	 * Original signature : <code>int CfgUpdateFeeder(const ConFeeder*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1560</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(42) 
	public int CfgUpdateFeeder(Pointer<ConFeeder > cfg) {
		return CfgUpdateFeeder(Pointer.getPeer(cfg));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(42) 
	protected native int CfgUpdateFeeder(@Ptr long cfg);
	/**
	 * Original signature : <code>int CfgUpdateBackup(const ConBackup*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1561</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(43) 
	public int CfgUpdateBackup(Pointer<ConBackup > cfg) {
		return CfgUpdateBackup(Pointer.getPeer(cfg));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(43) 
	protected native int CfgUpdateBackup(@Ptr long cfg);
	/**
	 * Original signature : <code>int CfgUpdateLiveUpdate(const ConLiveUpdate*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1562</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(44) 
	public int CfgUpdateLiveUpdate(Pointer<ConLiveUpdate > cfg) {
		return CfgUpdateLiveUpdate(Pointer.getPeer(cfg));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(44) 
	protected native int CfgUpdateLiveUpdate(@Ptr long cfg);
	/**
	 * Original signature : <code>int CfgUpdateSync(const ConSync*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1563</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(45) 
	public int CfgUpdateSync(Pointer<ConSync > cfg) {
		return CfgUpdateSync(Pointer.getPeer(cfg));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(45) 
	protected native int CfgUpdateSync(@Ptr long cfg);
	/**
	 * Original signature : <code>int CfgUpdatePlugin(const ConPlugin*, const PluginCfg*, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1564</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(46) 
	public int CfgUpdatePlugin(Pointer<ConPlugin > cfg, Pointer<PluginCfg > parupd, int total) {
		return CfgUpdatePlugin(Pointer.getPeer(cfg), Pointer.getPeer(parupd), total);
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(46) 
	protected native int CfgUpdatePlugin(@Ptr long cfg, @Ptr long parupd, int total);
	/**
	 * Original signature : <code>int CfgDeleteAccess(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1566</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(47) 
	public native int CfgDeleteAccess(int pos);
	/**
	 * Original signature : <code>int CfgDeleteDataServer(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1567</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(48) 
	public native int CfgDeleteDataServer(int pos);
	/**
	 * Original signature : <code>int CfgDeleteHoliday(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1568</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(49) 
	public native int CfgDeleteHoliday(int pos);
	/**
	 * Original signature : <code>int CfgDeleteSymbol(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1569</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(50) 
	public native int CfgDeleteSymbol(int pos);
	/**
	 * Original signature : <code>int CfgDeleteGroup(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1570</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(51) 
	public native int CfgDeleteGroup(int pos);
	/**
	 * Original signature : <code>int CfgDeleteManager(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1571</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(52) 
	public native int CfgDeleteManager(int pos);
	/**
	 * Original signature : <code>int CfgDeleteFeeder(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1572</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(53) 
	public native int CfgDeleteFeeder(int pos);
	/**
	 * Original signature : <code>int CfgDeleteLiveUpdate(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1573</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(54) 
	public native int CfgDeleteLiveUpdate(int pos);
	/**
	 * Original signature : <code>int CfgDeleteSync(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1574</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(55) 
	public native int CfgDeleteSync(int pos);
	/**
	 * Original signature : <code>int CfgShiftAccess(const int, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1576</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(56) 
	public native int CfgShiftAccess(int pos, int shift);
	/**
	 * Original signature : <code>int CfgShiftDataServer(const int, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1577</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(57) 
	public native int CfgShiftDataServer(int pos, int shift);
	/**
	 * Original signature : <code>int CfgShiftHoliday(const int, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1578</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(58) 
	public native int CfgShiftHoliday(int pos, int shift);
	/**
	 * Original signature : <code>int CfgShiftSymbol(const int, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1579</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(59) 
	public native int CfgShiftSymbol(int pos, int shift);
	/**
	 * Original signature : <code>int CfgShiftGroup(const int, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1580</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(60) 
	public native int CfgShiftGroup(int pos, int shift);
	/**
	 * Original signature : <code>int CfgShiftManager(const int, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1581</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(61) 
	public native int CfgShiftManager(int pos, int shift);
	/**
	 * Original signature : <code>int CfgShiftFeeder(const int, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1582</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(62) 
	public native int CfgShiftFeeder(int pos, int shift);
	/**
	 * Original signature : <code>int CfgShiftLiveUpdate(const int, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1583</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(63) 
	public native int CfgShiftLiveUpdate(int pos, int shift);
	/**
	 * Original signature : <code>int CfgShiftSync(const int, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1584</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(64) 
	public native int CfgShiftSync(int pos, int shift);
	/**
	 * Original signature : <code>int CfgShiftPlugin(const int, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1585</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(65) 
	public native int CfgShiftPlugin(int pos, int shift);
	/**
	 * --- server feeders<br>
	 * Original signature : <code>ServerFeed* SrvFeeders(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1587</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(66) 
	public Pointer<ServerFeed > SrvFeeders(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(SrvFeeders(Pointer.getPeer(total)), ServerFeed.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(66) 
	protected native long SrvFeeders(@Ptr long total);
	/**
	 * Original signature : <code>LPSTR SrvFeederLog(LPCSTR, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1588</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(67) 
	public LPSTR SrvFeederLog(LPCSTR name, Pointer<Integer > len) {
		return Pointer.pointerToAddress(SrvFeederLog(Pointer.getPeer(name), Pointer.getPeer(len)));
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(67) 
	protected native long SrvFeederLog(@Ptr long name, @Ptr long len);
	/**
	 * --- chart bases<br>
	 * Original signature : <code>RateInfoOld* ChartRequestObsolete(const ChartInfo*, time_t*, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1590</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(68) 
	public Pointer<RateInfoOld > ChartRequestObsolete(Pointer<ChartInfo > chart, Pointer<TimeT > timesign, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(ChartRequestObsolete(Pointer.getPeer(chart), Pointer.getPeer(timesign), Pointer.getPeer(total)), RateInfoOld.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(68) 
	protected native long ChartRequestObsolete(@Ptr long chart, @Ptr long timesign, @Ptr long total);
	/**
	 * Original signature : <code>int ChartAddObsolete(LPCSTR, const int, const RateInfoOld*, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1591</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(69) 
	public int ChartAddObsolete(LPCSTR symbol, int period, Pointer<RateInfoOld > rates, Pointer<Integer > count) {
		return ChartAddObsolete(Pointer.getPeer(symbol), period, Pointer.getPeer(rates), Pointer.getPeer(count));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(69) 
	protected native int ChartAddObsolete(@Ptr long symbol, int period, @Ptr long rates, @Ptr long count);
	/**
	 * Original signature : <code>int ChartUpdateObsolete(LPCSTR, const int, const RateInfoOld*, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1592</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(70) 
	public int ChartUpdateObsolete(LPCSTR symbol, int period, Pointer<RateInfoOld > rates, Pointer<Integer > count) {
		return ChartUpdateObsolete(Pointer.getPeer(symbol), period, Pointer.getPeer(rates), Pointer.getPeer(count));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(70) 
	protected native int ChartUpdateObsolete(@Ptr long symbol, int period, @Ptr long rates, @Ptr long count);
	/**
	 * Original signature : <code>int ChartDeleteObsolete(LPCSTR, const int, const RateInfoOld*, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1593</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(71) 
	public int ChartDeleteObsolete(LPCSTR symbol, int period, Pointer<RateInfoOld > rates, Pointer<Integer > count) {
		return ChartDeleteObsolete(Pointer.getPeer(symbol), period, Pointer.getPeer(rates), Pointer.getPeer(count));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(71) 
	protected native int ChartDeleteObsolete(@Ptr long symbol, int period, @Ptr long rates, @Ptr long count);
	/**
	 * --- performance info<br>
	 * Original signature : <code>PerformanceInfo* PerformanceRequest(time_t, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1595</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(72) 
	public Pointer<PerformanceInfo > PerformanceRequest(TimeT from, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(PerformanceRequest(from, Pointer.getPeer(total)), PerformanceInfo.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(72) 
	protected native long PerformanceRequest(TimeT from, @Ptr long total);
	/**
	 * --- users/trades backups<br>
	 * Original signature : <code>BackupInfo* BackupInfoUsers(const int, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1597</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(73) 
	public Pointer<BackupInfo > BackupInfoUsers(int mode, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(BackupInfoUsers(mode, Pointer.getPeer(total)), BackupInfo.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(73) 
	protected native long BackupInfoUsers(int mode, @Ptr long total);
	/**
	 * Original signature : <code>BackupInfo* BackupInfoOrders(const int, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1598</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(74) 
	public Pointer<BackupInfo > BackupInfoOrders(int mode, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(BackupInfoOrders(mode, Pointer.getPeer(total)), BackupInfo.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(74) 
	protected native long BackupInfoOrders(int mode, @Ptr long total);
	/**
	 * Original signature : <code>UserRecord* BackupRequestUsers(LPCSTR, LPCSTR, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1599</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(75) 
	public Pointer<UserRecord > BackupRequestUsers(LPCSTR file, LPCSTR request, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(BackupRequestUsers(Pointer.getPeer(file), Pointer.getPeer(request), Pointer.getPeer(total)), UserRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(75) 
	protected native long BackupRequestUsers(@Ptr long file, @Ptr long request, @Ptr long total);
	/**
	 * Original signature : <code>TradeRecord* BackupRequestOrders(LPCSTR, LPCSTR, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1600</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(76) 
	public Pointer<TradeRecord > BackupRequestOrders(LPCSTR file, LPCSTR request, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(BackupRequestOrders(Pointer.getPeer(file), Pointer.getPeer(request), Pointer.getPeer(total)), TradeRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(76) 
	protected native long BackupRequestOrders(@Ptr long file, @Ptr long request, @Ptr long total);
	/**
	 * Original signature : <code>int BackupRestoreUsers(const UserRecord*, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1601</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(77) 
	public int BackupRestoreUsers(Pointer<UserRecord > users, int total) {
		return BackupRestoreUsers(Pointer.getPeer(users), total);
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(77) 
	protected native int BackupRestoreUsers(@Ptr long users, int total);
	/**
	 * Original signature : <code>TradeRestoreResult* BackupRestoreOrders(const TradeRecord*, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1602</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(78) 
	public Pointer<TradeRestoreResult > BackupRestoreOrders(Pointer<TradeRecord > trades, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(BackupRestoreOrders(Pointer.getPeer(trades), Pointer.getPeer(total)), TradeRestoreResult.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(78) 
	protected native long BackupRestoreOrders(@Ptr long trades, @Ptr long total);
	/**
	 * --- administrator databases commands<br>
	 * Original signature : <code>UserRecord* AdmUsersRequest(LPCSTR, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1604</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(79) 
	public Pointer<UserRecord > AdmUsersRequest(LPCSTR group, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(AdmUsersRequest(Pointer.getPeer(group), Pointer.getPeer(total)), UserRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(79) 
	protected native long AdmUsersRequest(@Ptr long group, @Ptr long total);
	/**
	 * Original signature : <code>TradeRecord* AdmTradesRequest(LPCSTR, const int, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1605</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(80) 
	public Pointer<TradeRecord > AdmTradesRequest(LPCSTR group, int open_only, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(AdmTradesRequest(Pointer.getPeer(group), open_only, Pointer.getPeer(total)), TradeRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(80) 
	protected native long AdmTradesRequest(@Ptr long group, int open_only, @Ptr long total);
	/**
	 * Original signature : <code>int AdmBalanceCheckObsolete(int*, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1606</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(81) 
	public int AdmBalanceCheckObsolete(Pointer<Integer > logins, Pointer<Integer > total) {
		return AdmBalanceCheckObsolete(Pointer.getPeer(logins), Pointer.getPeer(total));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(81) 
	protected native int AdmBalanceCheckObsolete(@Ptr long logins, @Ptr long total);
	/**
	 * Original signature : <code>int AdmBalanceFix(const int*, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1607</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(82) 
	public int AdmBalanceFix(Pointer<Integer > logins, int total) {
		return AdmBalanceFix(Pointer.getPeer(logins), total);
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(82) 
	protected native int AdmBalanceFix(@Ptr long logins, int total);
	/**
	 * Original signature : <code>int AdmTradesDelete(const int*, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1608</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(83) 
	public int AdmTradesDelete(Pointer<Integer > orders, int total) {
		return AdmTradesDelete(Pointer.getPeer(orders), total);
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(83) 
	protected native int AdmTradesDelete(@Ptr long orders, int total);
	/**
	 * Original signature : <code>int AdmTradeRecordModify(const TradeRecord*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1609</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(84) 
	public int AdmTradeRecordModify(Pointer<TradeRecord > trade) {
		return AdmTradeRecordModify(Pointer.getPeer(trade));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(84) 
	protected native int AdmTradeRecordModify(@Ptr long trade);
	/**
	 * --- symbols<br>
	 * Original signature : <code>int SymbolsRefresh()</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1611</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(85) 
	public native int SymbolsRefresh();
	/**
	 * Original signature : <code>ConSymbol* SymbolsGetAll(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1612</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(86) 
	public Pointer<ConSymbol > SymbolsGetAll(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(SymbolsGetAll(Pointer.getPeer(total)), ConSymbol.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(86) 
	protected native long SymbolsGetAll(@Ptr long total);
	/**
	 * Original signature : <code>int SymbolGet(LPCSTR, ConSymbol*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1613</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(87) 
	public int SymbolGet(LPCSTR symbol, Pointer<ConSymbol > cs) {
		return SymbolGet(Pointer.getPeer(symbol), Pointer.getPeer(cs));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(87) 
	protected native int SymbolGet(@Ptr long symbol, @Ptr long cs);
	/**
	 * Original signature : <code>int SymbolInfoGet(LPCSTR, SymbolInfo*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1614</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(88) 
	public int SymbolInfoGet(LPCSTR symbol, Pointer<SymbolInfo > si) {
		return SymbolInfoGet(Pointer.getPeer(symbol), Pointer.getPeer(si));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(88) 
	protected native int SymbolInfoGet(@Ptr long symbol, @Ptr long si);
	/**
	 * Original signature : <code>int SymbolAdd(LPCSTR)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1615</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(89) 
	public int SymbolAdd(LPCSTR symbol) {
		return SymbolAdd(Pointer.getPeer(symbol));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(89) 
	protected native int SymbolAdd(@Ptr long symbol);
	/**
	 * Original signature : <code>int SymbolHide(LPCSTR)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1616</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(90) 
	public int SymbolHide(LPCSTR symbol) {
		return SymbolHide(Pointer.getPeer(symbol));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(90) 
	protected native int SymbolHide(@Ptr long symbol);
	/**
	 * --- symbol commands<br>
	 * Original signature : <code>int SymbolChangeObsolete(const SymbolPropertiesOld*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1618</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(91) 
	public int SymbolChangeObsolete(Pointer<SymbolPropertiesOld > prop) {
		return SymbolChangeObsolete(Pointer.getPeer(prop));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(91) 
	protected native int SymbolChangeObsolete(@Ptr long prop);
	/**
	 * Original signature : <code>int SymbolSendTick(LPCSTR, const double, const double)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1619</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(92) 
	public int SymbolSendTick(LPCSTR symbol, double bid, double ask) {
		return SymbolSendTick(Pointer.getPeer(symbol), bid, ask);
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(92) 
	protected native int SymbolSendTick(@Ptr long symbol, double bid, double ask);
	/**
	 * --- manager commands<br>
	 * Original signature : <code>ConGroup* GroupsRequest(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1621</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(93) 
	public Pointer<ConGroup > GroupsRequest(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(GroupsRequest(Pointer.getPeer(total)), ConGroup.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(93) 
	protected native long GroupsRequest(@Ptr long total);
	/**
	 * Original signature : <code>int MailSend(const MailBox*, const int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1622</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(94) 
	public int MailSend(Pointer<MailBox > mail, Pointer<Integer > logins) {
		return MailSend(Pointer.getPeer(mail), Pointer.getPeer(logins));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(94) 
	protected native int MailSend(@Ptr long mail, @Ptr long logins);
	/**
	 * Original signature : <code>int NewsSend(const NewsTopic*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1623</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(95) 
	public int NewsSend(Pointer<NewsTopic > news) {
		return NewsSend(Pointer.getPeer(news));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(95) 
	protected native int NewsSend(@Ptr long news);
	/**
	 * --- journal<br>
	 * Original signature : <code>ServerLog* JournalRequest(const int, const time_t, const time_t, LPCSTR, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1625</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(96) 
	public Pointer<ServerLog > JournalRequest(int mode, TimeT from, TimeT to, LPCSTR filter, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(JournalRequest(mode, from, to, Pointer.getPeer(filter), Pointer.getPeer(total)), ServerLog.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(96) 
	protected native long JournalRequest(int mode, TimeT from, TimeT to, @Ptr long filter, @Ptr long total);
	/**
	 * --- users<br>
	 * Original signature : <code>UserRecord* UsersRequest(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1628</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(97) 
	public Pointer<UserRecord > UsersRequest(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(UsersRequest(Pointer.getPeer(total)), UserRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(97) 
	protected native long UsersRequest(@Ptr long total);
	/**
	 * Original signature : <code>UserRecord* UserRecordsRequest(const int*, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1629</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(98) 
	public Pointer<UserRecord > UserRecordsRequest(Pointer<Integer > logins, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(UserRecordsRequest(Pointer.getPeer(logins), Pointer.getPeer(total)), UserRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(98) 
	protected native long UserRecordsRequest(@Ptr long logins, @Ptr long total);
	/**
	 * Original signature : <code>int UserRecordNew(UserRecord*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1630</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(99) 
	public int UserRecordNew(Pointer<UserRecord > user) {
		return UserRecordNew(Pointer.getPeer(user));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(99) 
	protected native int UserRecordNew(@Ptr long user);
	/**
	 * Original signature : <code>int UserRecordUpdate(const UserRecord*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1631</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(100) 
	public int UserRecordUpdate(Pointer<UserRecord > user) {
		return UserRecordUpdate(Pointer.getPeer(user));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(100) 
	protected native int UserRecordUpdate(@Ptr long user);
	/**
	 * Original signature : <code>int UsersGroupOp(const GroupCommandInfo*, const int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1632</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(101) 
	public int UsersGroupOp(Pointer<GroupCommandInfo > info, Pointer<Integer > logins) {
		return UsersGroupOp(Pointer.getPeer(info), Pointer.getPeer(logins));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(101) 
	protected native int UsersGroupOp(@Ptr long info, @Ptr long logins);
	/**
	 * Original signature : <code>int UserPasswordCheck(const int, LPCSTR)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1633</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(102) 
	public int UserPasswordCheck(int login, LPCSTR password) {
		return UserPasswordCheck(login, Pointer.getPeer(password));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(102) 
	protected native int UserPasswordCheck(int login, @Ptr long password);
	/**
	 * Original signature : <code>int UserPasswordSet(const int, LPCSTR, const int, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1634</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(103) 
	public int UserPasswordSet(int login, LPCSTR password, int change_investor, int clean_pubkey) {
		return UserPasswordSet(login, Pointer.getPeer(password), change_investor, clean_pubkey);
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(103) 
	protected native int UserPasswordSet(int login, @Ptr long password, int change_investor, int clean_pubkey);
	/**
	 * Original signature : <code>OnlineRecord* OnlineRequest(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1635</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(104) 
	public Pointer<OnlineRecord > OnlineRequest(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(OnlineRequest(Pointer.getPeer(total)), OnlineRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(104) 
	protected native long OnlineRequest(@Ptr long total);
	/**
	 * --- orders<br>
	 * Original signature : <code>int TradeTransaction(TradeTransInfo*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1637</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(105) 
	public int TradeTransaction(Pointer<TradeTransInfo > info) {
		return TradeTransaction(Pointer.getPeer(info));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(105) 
	protected native int TradeTransaction(@Ptr long info);
	/**
	 * Original signature : <code>TradeRecord* TradesRequest(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1638</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(106) 
	public Pointer<TradeRecord > TradesRequest(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(TradesRequest(Pointer.getPeer(total)), TradeRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(106) 
	protected native long TradesRequest(@Ptr long total);
	/**
	 * Original signature : <code>TradeRecord* TradeRecordsRequest(const int*, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1639</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(107) 
	public Pointer<TradeRecord > TradeRecordsRequest(Pointer<Integer > orders, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(TradeRecordsRequest(Pointer.getPeer(orders), Pointer.getPeer(total)), TradeRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(107) 
	protected native long TradeRecordsRequest(@Ptr long orders, @Ptr long total);
	/**
	 * Original signature : <code>TradeRecord* TradesUserHistory(const int, const time_t, const time_t, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1640</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(108) 
	public Pointer<TradeRecord > TradesUserHistory(int login, TimeT from, TimeT to, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(TradesUserHistory(login, from, to, Pointer.getPeer(total)), TradeRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(108) 
	protected native long TradesUserHistory(int login, TimeT from, TimeT to, @Ptr long total);
	/**
	 * Original signature : <code>int TradeCheckStops(const TradeTransInfo*, const double)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1641</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(109) 
	public int TradeCheckStops(Pointer<TradeTransInfo > trade, double price) {
		return TradeCheckStops(Pointer.getPeer(trade), price);
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(109) 
	protected native int TradeCheckStops(@Ptr long trade, double price);
	/**
	 * --- reports<br>
	 * Original signature : <code>TradeRecord* ReportsRequest(const ReportGroupRequest*, const int*, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1643</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(110) 
	public Pointer<TradeRecord > ReportsRequest(Pointer<ReportGroupRequest > req, Pointer<Integer > logins, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(ReportsRequest(Pointer.getPeer(req), Pointer.getPeer(logins), Pointer.getPeer(total)), TradeRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(110) 
	protected native long ReportsRequest(@Ptr long req, @Ptr long logins, @Ptr long total);
	/**
	 * Original signature : <code>DailyReport* DailyReportsRequest(const DailyGroupRequest*, const int*, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1644</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(111) 
	public Pointer<DailyReport > DailyReportsRequest(Pointer<DailyGroupRequest > req, Pointer<Integer > logins, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(DailyReportsRequest(Pointer.getPeer(req), Pointer.getPeer(logins), Pointer.getPeer(total)), DailyReport.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(111) 
	protected native long DailyReportsRequest(@Ptr long req, @Ptr long logins, @Ptr long total);
	/**
	 * --- external command<br>
	 * Original signature : <code>int ExternalCommand(LPCSTR, const int, LPSTR*, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1646</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(112) 
	public int ExternalCommand(LPCSTR data_in, int size_in, Pointer<LPSTR > data_out, Pointer<Integer > size_out) {
		return ExternalCommand(Pointer.getPeer(data_in), size_in, Pointer.getPeer(data_out), Pointer.getPeer(size_out));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(112) 
	protected native int ExternalCommand(@Ptr long data_in, int size_in, @Ptr long data_out, @Ptr long size_out);
	/**
	 * --- plugins<br>
	 * Original signature : <code>int PluginUpdate(const ConPluginParam*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1648</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(113) 
	public int PluginUpdate(Pointer<ConPluginParam > plugin) {
		return PluginUpdate(Pointer.getPeer(plugin));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(113) 
	protected native int PluginUpdate(@Ptr long plugin);
	/**
	 * --- pumping<br>
	 * Original signature : <code>int PumpingSwitch(MTAPI_NOTIFY_FUNC, const HWND, const UINT, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1650</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(114) 
	public int PumpingSwitch(Pointer<MTAPI_NOTIFY_FUNC > pfnFunc, HWND destwnd, int eventmsg, int flags) {
		return PumpingSwitch(Pointer.getPeer(pfnFunc), Pointer.getPeer(destwnd), eventmsg, flags);
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(114) 
	protected native int PumpingSwitch(@Ptr long pfnFunc, @Ptr long destwnd, int eventmsg, int flags);
	/**
	 * Original signature : <code>ConGroup* GroupsGet(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1651</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(115) 
	public Pointer<ConGroup > GroupsGet(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(GroupsGet(Pointer.getPeer(total)), ConGroup.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(115) 
	protected native long GroupsGet(@Ptr long total);
	/**
	 * Original signature : <code>int GroupRecordGet(LPCSTR, ConGroup*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1652</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(116) 
	public int GroupRecordGet(LPCSTR name, Pointer<ConGroup > group) {
		return GroupRecordGet(Pointer.getPeer(name), Pointer.getPeer(group));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(116) 
	protected native int GroupRecordGet(@Ptr long name, @Ptr long group);
	/**
	 * Original signature : <code>int SymbolInfoUpdated(SymbolInfo*, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1653</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(117) 
	public int SymbolInfoUpdated(Pointer<SymbolInfo > si, int max_info) {
		return SymbolInfoUpdated(Pointer.getPeer(si), max_info);
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(117) 
	protected native int SymbolInfoUpdated(@Ptr long si, int max_info);
	/**
	 * Original signature : <code>UserRecord* UsersGet(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1654</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(118) 
	public Pointer<UserRecord > UsersGet(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(UsersGet(Pointer.getPeer(total)), UserRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(118) 
	protected native long UsersGet(@Ptr long total);
	/**
	 * Original signature : <code>int UserRecordGet(const int, UserRecord*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1655</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(119) 
	public int UserRecordGet(int login, Pointer<UserRecord > user) {
		return UserRecordGet(login, Pointer.getPeer(user));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(119) 
	protected native int UserRecordGet(int login, @Ptr long user);
	/**
	 * Original signature : <code>OnlineRecord* OnlineGet(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1656</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(120) 
	public Pointer<OnlineRecord > OnlineGet(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(OnlineGet(Pointer.getPeer(total)), OnlineRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(120) 
	protected native long OnlineGet(@Ptr long total);
	/**
	 * Original signature : <code>int OnlineRecordGet(const int, OnlineRecord*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1657</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(121) 
	public int OnlineRecordGet(int login, Pointer<OnlineRecord > user) {
		return OnlineRecordGet(login, Pointer.getPeer(user));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(121) 
	protected native int OnlineRecordGet(int login, @Ptr long user);
	/**
	 * Original signature : <code>TradeRecord* TradesGet(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1658</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(122) 
	public Pointer<TradeRecord > TradesGet(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(TradesGet(Pointer.getPeer(total)), TradeRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(122) 
	protected native long TradesGet(@Ptr long total);
	/**
	 * Original signature : <code>TradeRecord* TradesGetBySymbol(LPCSTR, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1659</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(123) 
	public Pointer<TradeRecord > TradesGetBySymbol(LPCSTR symbol, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(TradesGetBySymbol(Pointer.getPeer(symbol), Pointer.getPeer(total)), TradeRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(123) 
	protected native long TradesGetBySymbol(@Ptr long symbol, @Ptr long total);
	/**
	 * Original signature : <code>TradeRecord* TradesGetByLogin(const int, LPCSTR, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1660</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(124) 
	public Pointer<TradeRecord > TradesGetByLogin(int login, LPCSTR group, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(TradesGetByLogin(login, Pointer.getPeer(group), Pointer.getPeer(total)), TradeRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(124) 
	protected native long TradesGetByLogin(int login, @Ptr long group, @Ptr long total);
	/**
	 * Original signature : <code>TradeRecord* TradesGetByMarket(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1661</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(125) 
	public Pointer<TradeRecord > TradesGetByMarket(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(TradesGetByMarket(Pointer.getPeer(total)), TradeRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(125) 
	protected native long TradesGetByMarket(@Ptr long total);
	/**
	 * Original signature : <code>int TradeRecordGet(const int, TradeRecord*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1662</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(126) 
	public int TradeRecordGet(int order, Pointer<TradeRecord > trade) {
		return TradeRecordGet(order, Pointer.getPeer(trade));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(126) 
	protected native int TradeRecordGet(int order, @Ptr long trade);
	/**
	 * Original signature : <code>int TradeClearRollback(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1663</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(127) 
	public native int TradeClearRollback(int order);
	/**
	 * Original signature : <code>MarginLevel* MarginsGet(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1664</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(128) 
	public Pointer<MarginLevel > MarginsGet(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(MarginsGet(Pointer.getPeer(total)), MarginLevel.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(128) 
	protected native long MarginsGet(@Ptr long total);
	/**
	 * Original signature : <code>int MarginLevelGet(const int, LPCSTR, MarginLevel*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1665</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(129) 
	public int MarginLevelGet(int login, LPCSTR group, Pointer<MarginLevel > margin) {
		return MarginLevelGet(login, Pointer.getPeer(group), Pointer.getPeer(margin));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(129) 
	protected native int MarginLevelGet(int login, @Ptr long group, @Ptr long margin);
	/**
	 * Original signature : <code>RequestInfo* RequestsGet(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1666</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(130) 
	public Pointer<RequestInfo > RequestsGet(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(RequestsGet(Pointer.getPeer(total)), RequestInfo.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(130) 
	protected native long RequestsGet(@Ptr long total);
	/**
	 * Original signature : <code>int RequestInfoGet(const int, RequestInfo*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1667</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(131) 
	public int RequestInfoGet(int pos, Pointer<RequestInfo > info) {
		return RequestInfoGet(pos, Pointer.getPeer(info));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(131) 
	protected native int RequestInfoGet(int pos, @Ptr long info);
	/**
	 * Original signature : <code>ConPlugin* PluginsGet(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1668</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(132) 
	public Pointer<ConPlugin > PluginsGet(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(PluginsGet(Pointer.getPeer(total)), ConPlugin.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(132) 
	protected native long PluginsGet(@Ptr long total);
	/**
	 * Original signature : <code>int PluginParamGet(const int, ConPluginParam*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1669</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(133) 
	public int PluginParamGet(int pos, Pointer<ConPluginParam > plugin) {
		return PluginParamGet(pos, Pointer.getPeer(plugin));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(133) 
	protected native int PluginParamGet(int pos, @Ptr long plugin);
	/**
	 * Original signature : <code>int MailLast(LPSTR, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1670</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(134) 
	public int MailLast(LPSTR path, Pointer<Integer > length) {
		return MailLast(Pointer.getPeer(path), Pointer.getPeer(length));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(134) 
	protected native int MailLast(@Ptr long path, @Ptr long length);
	/**
	 * Original signature : <code>NewsTopic* NewsGet(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1671</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(135) 
	public Pointer<NewsTopic > NewsGet(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(NewsGet(Pointer.getPeer(total)), NewsTopic.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(135) 
	protected native long NewsGet(@Ptr long total);
	/**
	 * Original signature : <code>int NewsTotal()</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1672</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(136) 
	public native int NewsTotal();
	/**
	 * Original signature : <code>int NewsTopicGet(const int, NewsTopic*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1673</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(137) 
	public int NewsTopicGet(int pos, Pointer<NewsTopic > news) {
		return NewsTopicGet(pos, Pointer.getPeer(news));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(137) 
	protected native int NewsTopicGet(int pos, @Ptr long news);
	/**
	 * Original signature : <code>void NewsBodyRequest(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1674</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(138) 
	public native void NewsBodyRequest(int key);
	/**
	 * Original signature : <code>LPSTR NewsBodyGet(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1675</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(139) 
	public LPSTR NewsBodyGet(int key) {
		return Pointer.pointerToAddress(NewsBodyGet$2(key));
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Name("NewsBodyGet") 
	@Virtual(139) 
	protected native long NewsBodyGet$2(int key);
	/**
	 * --- dealing<br>
	 * Original signature : <code>int DealerSwitch(MTAPI_NOTIFY_FUNC, const HWND, const UINT)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1677</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(140) 
	public int DealerSwitch(Pointer<MTAPI_NOTIFY_FUNC > pfnFunc, HWND destwnd, int eventmsg) {
		return DealerSwitch(Pointer.getPeer(pfnFunc), Pointer.getPeer(destwnd), eventmsg);
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(140) 
	protected native int DealerSwitch(@Ptr long pfnFunc, @Ptr long destwnd, int eventmsg);
	/**
	 * Original signature : <code>int DealerRequestGet(RequestInfo*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1678</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(141) 
	public int DealerRequestGet(Pointer<RequestInfo > info) {
		return DealerRequestGet(Pointer.getPeer(info));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(141) 
	protected native int DealerRequestGet(@Ptr long info);
	/**
	 * Original signature : <code>int DealerSend(const RequestInfo*, const int, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1679</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(142) 
	public int DealerSend(Pointer<RequestInfo > info, int requote, int mode) {
		return DealerSend(Pointer.getPeer(info), requote, mode);
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(142) 
	protected native int DealerSend(@Ptr long info, int requote, int mode);
	/**
	 * Original signature : <code>int DealerReject(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1680</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(143) 
	public native int DealerReject(int id);
	/**
	 * Original signature : <code>int DealerReset(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1681</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(144) 
	public native int DealerReset(int id);
	/**
	 * ---<br>
	 * Original signature : <code>TickInfo* TickInfoLast(LPCSTR, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1683</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(145) 
	public Pointer<TickInfo > TickInfoLast(LPCSTR symbol, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(TickInfoLast(Pointer.getPeer(symbol), Pointer.getPeer(total)), TickInfo.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(145) 
	protected native long TickInfoLast(@Ptr long symbol, @Ptr long total);
	/**
	 * Original signature : <code>int SymbolsGroupsGet(ConSymbolGroup*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1684</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(146) 
	public int SymbolsGroupsGet(Pointer<ConSymbolGroup > grp) {
		return SymbolsGroupsGet(Pointer.getPeer(grp));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(146) 
	protected native int SymbolsGroupsGet(@Ptr long grp);
	/**
	 * Original signature : <code>time_t ServerTime()</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1685</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(147) 
	public native TimeT ServerTime();
	/**
	 * Original signature : <code>MailBox* MailsRequest(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1686</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(148) 
	public Pointer<MailBox > MailsRequest(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(MailsRequest(Pointer.getPeer(total)), MailBox.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(148) 
	protected native long MailsRequest(@Ptr long total);
	/**
	 * --- risk management<br>
	 * Original signature : <code>SymbolSummary* SummaryGetAll(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1688</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(149) 
	public Pointer<SymbolSummary > SummaryGetAll(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(SummaryGetAll(Pointer.getPeer(total)), SymbolSummary.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(149) 
	protected native long SummaryGetAll(@Ptr long total);
	/**
	 * Original signature : <code>int SummaryGet(LPCSTR, SymbolSummary*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1689</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(150) 
	public int SummaryGet(LPCSTR symbol, Pointer<SymbolSummary > info) {
		return SummaryGet(Pointer.getPeer(symbol), Pointer.getPeer(info));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(150) 
	protected native int SummaryGet(@Ptr long symbol, @Ptr long info);
	/**
	 * Original signature : <code>int SummaryGetByCount(const int, SymbolSummary*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1690</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(151) 
	public int SummaryGetByCount(int symbol, Pointer<SymbolSummary > info) {
		return SummaryGetByCount(symbol, Pointer.getPeer(info));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(151) 
	protected native int SummaryGetByCount(int symbol, @Ptr long info);
	/**
	 * Original signature : <code>int SummaryGetByType(const int, SymbolSummary*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1691</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(152) 
	public int SummaryGetByType(int sectype, Pointer<SymbolSummary > info) {
		return SummaryGetByType(sectype, Pointer.getPeer(info));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(152) 
	protected native int SummaryGetByType(int sectype, @Ptr long info);
	/**
	 * Original signature : <code>int SummaryCurrency(LPSTR, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1692</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(153) 
	public int SummaryCurrency(LPSTR cur, int maxchars) {
		return SummaryCurrency(Pointer.getPeer(cur), maxchars);
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(153) 
	protected native int SummaryCurrency(@Ptr long cur, int maxchars);
	/**
	 * Original signature : <code>ExposureValue* ExposureGet(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1693</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(154) 
	public Pointer<ExposureValue > ExposureGet(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(ExposureGet(Pointer.getPeer(total)), ExposureValue.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(154) 
	protected native long ExposureGet(@Ptr long total);
	/**
	 * Original signature : <code>int ExposureValueGet(LPCSTR, ExposureValue*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1694</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(155) 
	public int ExposureValueGet(LPCSTR cur, Pointer<ExposureValue > info) {
		return ExposureValueGet(Pointer.getPeer(cur), Pointer.getPeer(info));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(155) 
	protected native int ExposureValueGet(@Ptr long cur, @Ptr long info);
	/**
	 * ---<br>
	 * Original signature : <code>int MarginLevelRequest(const int, MarginLevel*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1696</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(156) 
	public int MarginLevelRequest(int login, Pointer<MarginLevel > level) {
		return MarginLevelRequest(login, Pointer.getPeer(level));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(156) 
	protected native int MarginLevelRequest(int login, @Ptr long level);
	/**
	 * Original signature : <code>int HistoryCorrect(LPCSTR, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1697</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(157) 
	public int HistoryCorrect(LPCSTR symbol, Pointer<Integer > updated) {
		return HistoryCorrect(Pointer.getPeer(symbol), Pointer.getPeer(updated));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(157) 
	protected native int HistoryCorrect(@Ptr long symbol, @Ptr long updated);
	/**
	 * --- new chart bases<br>
	 * Original signature : <code>RateInfo* ChartRequest(const ChartInfo*, time_t*, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1699</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(158) 
	public Pointer<RateInfo > ChartRequest(Pointer<ChartInfo > chart, Pointer<TimeT > timesign, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(ChartRequest(Pointer.getPeer(chart), Pointer.getPeer(timesign), Pointer.getPeer(total)), RateInfo.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(158) 
	protected native long ChartRequest(@Ptr long chart, @Ptr long timesign, @Ptr long total);
	/**
	 * Original signature : <code>int ChartAdd(LPCSTR, const int, const RateInfo*, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1700</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(159) 
	public int ChartAdd(LPCSTR symbol, int period, Pointer<RateInfo > rates, Pointer<Integer > count) {
		return ChartAdd(Pointer.getPeer(symbol), period, Pointer.getPeer(rates), Pointer.getPeer(count));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(159) 
	protected native int ChartAdd(@Ptr long symbol, int period, @Ptr long rates, @Ptr long count);
	/**
	 * Original signature : <code>int ChartUpdate(LPCSTR, const int, const RateInfo*, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1701</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(160) 
	public int ChartUpdate(LPCSTR symbol, int period, Pointer<RateInfo > rates, Pointer<Integer > count) {
		return ChartUpdate(Pointer.getPeer(symbol), period, Pointer.getPeer(rates), Pointer.getPeer(count));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(160) 
	protected native int ChartUpdate(@Ptr long symbol, int period, @Ptr long rates, @Ptr long count);
	/**
	 * Original signature : <code>int ChartDelete(LPCSTR, const int, const RateInfo*, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1702</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(161) 
	public int ChartDelete(LPCSTR symbol, int period, Pointer<RateInfo > rates, Pointer<Integer > count) {
		return ChartDelete(Pointer.getPeer(symbol), period, Pointer.getPeer(rates), Pointer.getPeer(count));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(161) 
	protected native int ChartDelete(@Ptr long symbol, int period, @Ptr long rates, @Ptr long count);
	/**
	 * --- ticks base<br>
	 * Original signature : <code>TickRecord* TicksRequest(const TickRequest*, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1704</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(162) 
	public Pointer<TickRecord > TicksRequest(Pointer<TickRequest > request, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(TicksRequest(Pointer.getPeer(request), Pointer.getPeer(total)), TickRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(162) 
	protected native long TicksRequest(@Ptr long request, @Ptr long total);
	/**
	 * --- internal methods<br>
	 * Original signature : <code>int PumpingSwitchEx(MTAPI_NOTIFY_FUNC_EX, const int, void*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1706</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(163) 
	public int PumpingSwitchEx(Pointer<MTAPI_NOTIFY_FUNC_EX > pfnFunc, int flags, Pointer<? > param) {
		return PumpingSwitchEx(Pointer.getPeer(pfnFunc), flags, Pointer.getPeer(param));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(163) 
	protected native int PumpingSwitchEx(@Ptr long pfnFunc, int flags, @Ptr long param);
	/**
	 * Original signature : <code>int UsersSyncStart(const time_t)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1707</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(164) 
	public native int UsersSyncStart(TimeT timestamp);
	/**
	 * Original signature : <code>UserRecord* UsersSyncRead(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1708</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(165) 
	public Pointer<UserRecord > UsersSyncRead(Pointer<Integer > users_total) {
		return (Pointer)Pointer.pointerToAddress(UsersSyncRead(Pointer.getPeer(users_total)), UserRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(165) 
	protected native long UsersSyncRead(@Ptr long users_total);
	/**
	 * Original signature : <code>int* UsersSnapshot(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1709</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(166) 
	public Pointer<Integer > UsersSnapshot(Pointer<Integer > users_total) {
		return (Pointer)Pointer.pointerToAddress(UsersSnapshot(Pointer.getPeer(users_total)), Integer.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(166) 
	protected native long UsersSnapshot(@Ptr long users_total);
	/**
	 * Original signature : <code>int TradesSyncStart(const time_t)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1710</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(167) 
	public native int TradesSyncStart(TimeT timestamp);
	/**
	 * Original signature : <code>TradeRecord* TradesSyncRead(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1711</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(168) 
	public Pointer<TradeRecord > TradesSyncRead(Pointer<Integer > trades_total) {
		return (Pointer)Pointer.pointerToAddress(TradesSyncRead(Pointer.getPeer(trades_total)), TradeRecord.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(168) 
	protected native long TradesSyncRead(@Ptr long trades_total);
	/**
	 * Original signature : <code>int* TradesSnapshot(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1712</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(169) 
	public Pointer<Integer > TradesSnapshot(Pointer<Integer > trades_total) {
		return (Pointer)Pointer.pointerToAddress(TradesSnapshot(Pointer.getPeer(trades_total)), Integer.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(169) 
	protected native long TradesSnapshot(@Ptr long trades_total);
	/**
	 * Original signature : <code>int DailySyncStart(const time_t)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1713</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(170) 
	public native int DailySyncStart(TimeT timestamp);
	/**
	 * Original signature : <code>DailyReport* DailySyncRead(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1714</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(171) 
	public Pointer<DailyReport > DailySyncRead(Pointer<Integer > daily_total) {
		return (Pointer)Pointer.pointerToAddress(DailySyncRead(Pointer.getPeer(daily_total)), DailyReport.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(171) 
	protected native long DailySyncRead(@Ptr long daily_total);
	/**
	 * --- profit recalculation<br>
	 * Original signature : <code>int TradeCalcProfit(TradeRecord*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1716</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(172) 
	public int TradeCalcProfit(Pointer<TradeRecord > trade) {
		return TradeCalcProfit(Pointer.getPeer(trade));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(172) 
	protected native int TradeCalcProfit(@Ptr long trade);
	/**
	 * --- new symbol commands<br>
	 * Original signature : <code>int SymbolChange(const SymbolProperties*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1718</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(173) 
	public int SymbolChange(Pointer<SymbolProperties > prop) {
		return SymbolChange(Pointer.getPeer(prop));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(173) 
	protected native int SymbolChange(@Ptr long prop);
	/**
	 * --- network statistics<br>
	 * Original signature : <code>int BytesSent()</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1720</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(174) 
	public native int BytesSent();
	/**
	 * Original signature : <code>int BytesReceived()</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1721</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(175) 
	public native int BytesReceived();
	/**
	 * ---<br>
	 * Original signature : <code>int ManagerCommon(ConCommon*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1723</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(176) 
	public int ManagerCommon(Pointer<ConCommon > common) {
		return ManagerCommon(Pointer.getPeer(common));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(176) 
	protected native int ManagerCommon(@Ptr long common);
	/**
	 * --- log access<br>
	 * Original signature : <code>void LogsOut(const int, LPCSTR, LPCSTR)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1725</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(177) 
	public void LogsOut(int code, LPCSTR source, LPCSTR msg) {
		LogsOut(code, Pointer.getPeer(source), Pointer.getPeer(msg));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(177) 
	protected native void LogsOut(int code, @Ptr long source, @Ptr long msg);
	/**
	 * Original signature : <code>void LogsMode(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1726</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(178) 
	public native void LogsMode(int mode);
	/**
	 * --- check license<br>
	 * Original signature : <code>int LicenseCheck(LPCSTR)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1728</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(179) 
	public int LicenseCheck(LPCSTR license_name) {
		return LicenseCheck(Pointer.getPeer(license_name));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(179) 
	protected native int LicenseCheck(@Ptr long license_name);
	/**
	 * --- gateway configs<br>
	 * Original signature : <code>ConGatewayAccount* CfgRequestGatewayAccount(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1730</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(180) 
	public Pointer<ConGatewayAccount > CfgRequestGatewayAccount(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(CfgRequestGatewayAccount(Pointer.getPeer(total)), ConGatewayAccount.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(180) 
	protected native long CfgRequestGatewayAccount(@Ptr long total);
	/**
	 * Original signature : <code>ConGatewayMarkup* CfgRequestGatewayMarkup(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1731</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(181) 
	public Pointer<ConGatewayMarkup > CfgRequestGatewayMarkup(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(CfgRequestGatewayMarkup(Pointer.getPeer(total)), ConGatewayMarkup.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(181) 
	protected native long CfgRequestGatewayMarkup(@Ptr long total);
	/**
	 * Original signature : <code>ConGatewayRule* CfgRequestGatewayRule(int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1732</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(182) 
	public Pointer<ConGatewayRule > CfgRequestGatewayRule(Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(CfgRequestGatewayRule(Pointer.getPeer(total)), ConGatewayRule.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(182) 
	protected native long CfgRequestGatewayRule(@Ptr long total);
	/**
	 * Original signature : <code>int CfgUpdateGatewayAccount(const ConGatewayAccount*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1734</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(183) 
	public int CfgUpdateGatewayAccount(Pointer<ConGatewayAccount > cfg) {
		return CfgUpdateGatewayAccount(Pointer.getPeer(cfg));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(183) 
	protected native int CfgUpdateGatewayAccount(@Ptr long cfg);
	/**
	 * Original signature : <code>int CfgUpdateGatewayMarkup(const ConGatewayMarkup*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1735</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(184) 
	public int CfgUpdateGatewayMarkup(Pointer<ConGatewayMarkup > cfg) {
		return CfgUpdateGatewayMarkup(Pointer.getPeer(cfg));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(184) 
	protected native int CfgUpdateGatewayMarkup(@Ptr long cfg);
	/**
	 * Original signature : <code>int CfgUpdateGatewayRule(const ConGatewayRule*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1736</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(185) 
	public int CfgUpdateGatewayRule(Pointer<ConGatewayRule > cfg) {
		return CfgUpdateGatewayRule(Pointer.getPeer(cfg));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(185) 
	protected native int CfgUpdateGatewayRule(@Ptr long cfg);
	/**
	 * Original signature : <code>int CfgDeleteGatewayAccount(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1738</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(186) 
	public native int CfgDeleteGatewayAccount(int pos);
	/**
	 * Original signature : <code>int CfgDeleteGatewayMarkup(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1739</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(187) 
	public native int CfgDeleteGatewayMarkup(int pos);
	/**
	 * Original signature : <code>int CfgDeleteGatewayRule(const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1740</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(188) 
	public native int CfgDeleteGatewayRule(int pos);
	/**
	 * Original signature : <code>int CfgShiftGatewayAccount(const int, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1742</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(189) 
	public native int CfgShiftGatewayAccount(int pos, int shift);
	/**
	 * Original signature : <code>int CfgShiftGatewayMarkup(const int, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1743</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(190) 
	public native int CfgShiftGatewayMarkup(int pos, int shift);
	/**
	 * Original signature : <code>int CfgShiftGatewayRule(const int, const int)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1744</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(191) 
	public native int CfgShiftGatewayRule(int pos, int shift);
	/**
	 * --- administrator databases commands<br>
	 * Original signature : <code>BalanceDiff* AdmBalanceCheck(int*, int*)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1746</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(192) 
	public Pointer<BalanceDiff > AdmBalanceCheck(Pointer<Integer > logins, Pointer<Integer > total) {
		return (Pointer)Pointer.pointerToAddress(AdmBalanceCheck(Pointer.getPeer(logins), Pointer.getPeer(total)), BalanceDiff.class);
	}
	@Convention(Convention.Style.StdCall) 
	@Ptr 
	@Virtual(192) 
	protected native long AdmBalanceCheck(@Ptr long logins, @Ptr long total);
	/**
	 * --- notifications<br>
	 * Original signature : <code>int NotificationsSend(LPWSTR, LPCWSTR)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1748</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(193) 
	public int NotificationsSend(LPWSTR metaquotes_ids, LPCWSTR message) {
		return NotificationsSend(Pointer.getPeer(metaquotes_ids), Pointer.getPeer(message));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(193) 
	protected native int NotificationsSend(@Ptr long metaquotes_ids, @Ptr long message);
	/**
	 * Original signature : <code>int NotificationsSend(const int*, const UINT, LPCWSTR)</code><br>
	 * <i>native declaration : MT4ManagerAPI.h:1749</i>
	 */
	@Convention(Convention.Style.StdCall) 
	@Virtual(194) 
	public int NotificationsSend(Pointer<Integer > logins, int logins_total, LPCWSTR message) {
		return NotificationsSend(Pointer.getPeer(logins), logins_total, Pointer.getPeer(message));
	}
	@Convention(Convention.Style.StdCall) 
	@Virtual(194) 
	protected native int NotificationsSend(@Ptr long logins, int logins_total, @Ptr long message);
	public CManagerInterface() {
		super();
	}
	public CManagerInterface(Pointer pointer) {
		super(pointer);
	}
}
